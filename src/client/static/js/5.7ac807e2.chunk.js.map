{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/react-google-maps/lib/components/addons/MarkerClusterer.js","../node_modules/marker-clusterer-plus/src/markerclusterer.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Object","defineProperty","MarkerClusterer","_MarkerClusterer$chil","_defineProperty3","_interopRequireDefault","require","_getPrototypeOf2","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_react2","_propTypes2","_markerClustererPlus2","_MapChildHelper","_constants","obj","__esModule","default","_React$PureComponent","props","context","_this","__proto__","call","markerClusterer","construct","propTypes","updaterMap","setMap","MAP","state","MARKER_CLUSTERER","_ref","ANCHOR","componentDidMount","eventMap","prevProps","componentDidUpdate","repaint","componentWillUnmount","children","createElement","PureComponent","defaultAverageCenter","bool","defaultBatchSizeIE","number","defaultBatchSize","defaultCalculator","func","defaultClusterClass","string","defaultEnableRetinaIcons","defaultGridSize","defaultIgnoreHidden","defaultImageExtension","defaultImagePath","defaultImageSizes","array","defaultMaxZoom","defaultMinimumClusterSize","defaultStyles","defaultTitle","defaultZoomOnClick","averageCenter","batchSizeIE","batchSize","calculator","clusterClass","enableRetinaIcons","gridSize","ignoreHidden","imageExtension","imagePath","imageSizes","maxZoom","minimumClusterSize","styles","title","zoomOnClick","onClick","onClusteringBegin","onClusteringEnd","onMouseOut","onMouseOver","contextTypes","object","childContextTypes","instance","_averageCenter","setAverageCenter","_batchSizeIE","setBatchSizeIE","_batchSize","setBatchSize","_calculator","setCalculator","_clusterClass","setClusterClass","_enableRetinaIcons","setEnableRetinaIcons","_gridSize","setGridSize","_ignoreHidden","setIgnoreHidden","_imageExtension","setImageExtension","_imagePath","setImagePath","_imageSizes","setImageSizes","_maxZoom","setMaxZoom","_minimumClusterSize","setMinimumClusterSize","_styles","setStyles","_title","setTitle","_zoomOnClick","setZoomOnClick","ClusterIcon","cluster","getMarkerClusterer","extend","google","maps","OverlayView","cluster_","className_","getClusterClass","styles_","center_","div_","sums_","visible_","getMap","Cluster","mc","markerClusterer_","map_","gridSize_","getGridSize","minClusterSize_","getMinimumClusterSize","averageCenter_","getAverageCenter","markers_","bounds_","clusterIcon_","getStyles","map","opt_markers","opt_options","clusters_","listeners_","activeMap_","ready_","maxZoom_","title_","zoomOnClick_","ignoreHidden_","enableRetinaIcons_","imagePath_","IMAGE_PATH","imageExtension_","IMAGE_EXTENSION","imageSizes_","IMAGE_SIZES","calculator_","CALCULATOR","batchSize_","BATCH_SIZE","batchSizeIE_","BATCH_SIZE_IE","clusterClass_","navigator","userAgent","toLowerCase","indexOf","setupStyles_","addMarkers","prototype","onAdd","cMouseDownInCluster","cDraggingMapByCluster","cClusterIcon","document","className","show","getPanes","overlayMouseTarget","appendChild","boundsChangedListener_","event","addListener","addDomListener","e","theBounds","mz","trigger","getZoomOnClick","getMaxZoom","getBounds","fitBounds","setTimeout","getZoom","setZoom","cancelBubble","stopPropagation","onRemove","parentNode","hide","removeListener","clearInstanceListeners","removeChild","draw","pos","getPosFromLatLng_","style","top","y","left","x","display","img","bp","backgroundPosition_","split","spriteH","parseInt","replace","spriteV","cssText","createCss","url_","width_","height_","innerHTML","anchorText_","textColor_","textSize_","fontFamily_","fontWeight_","fontStyle_","textDecoration_","text","getTitle","useStyle","sums","index","Math","max","min","length","url","height","width","anchorText","anchorIcon_","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","setCenter","center","push","join","latlng","getProjection","fromLatLngToDivPixel","getSize","getMarkers","getCenter","i","bounds","LatLngBounds","markers","getPosition","remove","addMarker","marker","mCount","isMarkerAlreadyAdded_","l","lat","lng","LatLng","calculateBounds_","isAdded","updateIcon_","isMarkerInClusterBounds","contains","getExtendedBounds","numStyles","getCalculator","cMarkerClusterer","resetViewport_","get","redraw_","size","fitMapToMarkers","getIgnoreHidden","getEnableRetinaIcons","getImageExtension","getImagePath","getImageSizes","getBatchSizeIE","getTotalMarkers","getClusters","getTotalClusters","opt_nodraw","pushMarkerTo_","hasOwnProperty","getDraggable","removeMarker","removed","removeMarker_","removeMarkers","r","splice","clearMarkers","oldClusters","slice","projection","tr","getNorthEast","bl","getSouthWest","trPix","blPix","ne","fromDivPixelToLatLng","sw","createClusters_","opt_hide","distanceBetweenPoints_","p1","p2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds_","addToClosestCluster_","d","distance","clusterToAddTo","iFirst","mapBounds","timerRefStatic","clearTimeout","iLast","getVisible","obj1","obj2","property","count","toString","dv"],"mappings":"2GAAAA,EAAOC,QAAU,EAAQ,M,iCCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,iCCEAC,OAAOC,eAAezB,EAAS,aAAc,CAC3CU,OAAO,IAETV,EAAQ0B,qBAAkBH,EAE1B,IA0BII,EAxBAC,EAAmBC,EAFAC,EAAQ,KAM3BC,EAAmBF,EAFDC,EAAQ,KAM1BE,EAAmBH,EAFAC,EAAQ,KAM3BG,EAAgBJ,EAFAC,EAAQ,KAMxBI,EAA8BL,EAFAC,EAAQ,KAQtCK,EAAaN,EAFAC,EAAQ,KAQrBM,EAAUP,EAFDC,EAAQ,IAMjBO,EAAcR,EAFDC,EAAQ,KAMrBQ,EAAwBT,EAFDC,EAAQ,MAI/BS,EAAkBT,EAAQ,IAE1BU,EAAaV,EAAQ,IAEzB,SAASD,EAAuBY,GAC9B,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAQlD,IAAIf,EAAmB1B,EAAQ0B,gBAAmB,SAChDkB,GAOA,SAASlB,EAAgBmB,EAAOC,IAC7B,EAAId,EAAiBW,SAASzB,KAAMQ,GAErC,IAAIqB,GAAQ,EAAIb,EAA4BS,SAC1CzB,MAEEQ,EAAgBsB,YAChB,EAAIjB,EAAiBY,SAASjB,IAC9BuB,KAAK/B,KAAM2B,EAAOC,IAGlBI,EAAkB,IAAIZ,EAAsBK,QAahD,OAZC,EAAIJ,EAAgBY,WACnBzB,EAAgB0B,UAChBC,EACAN,EAAMF,MACNK,GAEFA,EAAgBI,OAAOP,EAAMD,QAAQN,EAAWe,MAChDR,EAAMS,OAAQ,EAAI5B,EAAiBe,SACjC,GACAH,EAAWiB,iBACXP,GAEKH,EAoET,OAjGC,EAAIZ,EAAWQ,SAASjB,EAAiBkB,IAgCzC,EAAIX,EAAcU,SAASjB,EAAiB,CAC3C,CACEnB,IAAK,kBACLG,MAAO,WACL,IAAIgD,EAEAR,EAAkBhC,KAAKsC,MAAMhB,EAAWiB,kBAC5C,OACGC,EAAO,IACR,EAAI9B,EAAiBe,SACnBe,EACAlB,EAAWmB,OACXT,IAEF,EAAItB,EAAiBe,SACnBe,EACAlB,EAAWiB,iBACXP,GAEFQ,IAIN,CACEnD,IAAK,oBACLG,MAAO,YACJ,EAAI6B,EAAgBqB,mBACnB1C,KACAA,KAAKsC,MAAMhB,EAAWiB,kBACtBI,KAIN,CACEtD,IAAK,qBACLG,MAAO,SAA4BoD,IAChC,EAAIvB,EAAgBwB,oBACnB7C,KACAA,KAAKsC,MAAMhB,EAAWiB,kBACtBI,EACAR,EACAS,GAEF5C,KAAKsC,MAAMhB,EAAWiB,kBAAkBO,YAG5C,CACEzD,IAAK,uBACLG,MAAO,YACJ,EAAI6B,EAAgB0B,sBAAsB/C,MAC3C,IAAIgC,EAAkBhC,KAAKsC,MAAMhB,EAAWiB,kBACxCP,GACFA,EAAgBI,OAAO,QAI7B,CACE/C,IAAK,SACLG,MAAO,WACL,IAAIwD,EAAWhD,KAAK2B,MAAMqB,SAE1B,OAAO9B,EAAQO,QAAQwB,cAAc,MAAO,KAAMD,OAIjDxC,EApGyC,CAqG/CU,EAAQO,QAAQyB,eAEnB1C,EAAgB0B,UAAY,CAI1BiB,qBAAsBhC,EAAYM,QAAQ2B,KAK1CC,mBAAoBlC,EAAYM,QAAQ6B,OAKxCC,iBAAkBpC,EAAYM,QAAQ6B,OAKtCE,kBAAmBrC,EAAYM,QAAQgC,KAKvCC,oBAAqBvC,EAAYM,QAAQkC,OAKzCC,yBAA0BzC,EAAYM,QAAQ2B,KAK9CS,gBAAiB1C,EAAYM,QAAQ6B,OAKrCQ,oBAAqB3C,EAAYM,QAAQ2B,KAKzCW,sBAAuB5C,EAAYM,QAAQkC,OAK3CK,iBAAkB7C,EAAYM,QAAQkC,OAKtCM,kBAAmB9C,EAAYM,QAAQyC,MAKvCC,eAAgBhD,EAAYM,QAAQ6B,OAKpCc,0BAA2BjD,EAAYM,QAAQ6B,OAK/Ce,cAAelD,EAAYM,QAAQyC,MAKnCI,aAAcnD,EAAYM,QAAQkC,OAKlCY,mBAAoBpD,EAAYM,QAAQ2B,KAKxCoB,cAAerD,EAAYM,QAAQ2B,KAKnCqB,YAAatD,EAAYM,QAAQ6B,OAKjCoB,UAAWvD,EAAYM,QAAQ6B,OAK/BqB,WAAYxD,EAAYM,QAAQgC,KAKhCmB,aAAczD,EAAYM,QAAQkC,OAKlCkB,kBAAmB1D,EAAYM,QAAQ2B,KAKvC0B,SAAU3D,EAAYM,QAAQ6B,OAK9ByB,aAAc5D,EAAYM,QAAQ2B,KAKlC4B,eAAgB7D,EAAYM,QAAQkC,OAKpCsB,UAAW9D,EAAYM,QAAQkC,OAK/BuB,WAAY/D,EAAYM,QAAQyC,MAKhCiB,QAAShE,EAAYM,QAAQ6B,OAK7B8B,mBAAoBjE,EAAYM,QAAQ6B,OAKxC+B,OAAQlE,EAAYM,QAAQyC,MAK5BoB,MAAOnE,EAAYM,QAAQkC,OAK3B4B,YAAapE,EAAYM,QAAQ2B,KAKjCoC,QAASrE,EAAYM,QAAQgC,KAK7BgC,kBAAmBtE,EAAYM,QAAQgC,KAKvCiC,gBAAiBvE,EAAYM,QAAQgC,KAKrCkC,WAAYxE,EAAYM,QAAQgC,KAKhCmC,YAAazE,EAAYM,QAAQgC,MAEnCjD,EAAgBqF,cAAe,EAAInF,EAAiBe,SAClD,GACAH,EAAWe,IACXlB,EAAYM,QAAQqE,QAEtBtF,EAAgBuF,mBAAsBtF,EAAwB,IAC9D,EAAIC,EAAiBe,SACnBhB,EACAa,EAAWmB,OACXtB,EAAYM,QAAQqE,SAEtB,EAAIpF,EAAiBe,SACnBhB,EACAa,EAAWiB,iBACXpB,EAAYM,QAAQqE,QAEtBrF,GACA3B,EAAQ2C,QAAUjB,EAElB,IAAImC,EAAW,CACb6C,QAAS,QACTC,kBAAmB,kBACnBC,gBAAiB,gBACjBC,WAAY,WACZC,YAAa,aAGXzD,EAAa,CACfqC,cAAe,SAAuBwB,EAAUC,GAC9CD,EAASE,iBAAiBD,IAE5BxB,YAAa,SAAqBuB,EAAUG,GAC1CH,EAASI,eAAeD,IAE1BzB,UAAW,SAAmBsB,EAAUK,GACtCL,EAASM,aAAaD,IAExB1B,WAAY,SAAoBqB,EAAUO,GACxCP,EAASQ,cAAcD,IAEzB3B,aAAc,SAAsBoB,EAAUS,GAC5CT,EAASU,gBAAgBD,IAE3B5B,kBAAmB,SAA2BmB,EAAUW,GACtDX,EAASY,qBAAqBD,IAEhC7B,SAAU,SAAkBkB,EAAUa,GACpCb,EAASc,YAAYD,IAEvB9B,aAAc,SAAsBiB,EAAUe,GAC5Cf,EAASgB,gBAAgBD,IAE3B/B,eAAgB,SAAwBgB,EAAUiB,GAChDjB,EAASkB,kBAAkBD,IAE7BhC,UAAW,SAAmBe,EAAUmB,GACtCnB,EAASoB,aAAaD,IAExBjC,WAAY,SAAoBc,EAAUqB,GACxCrB,EAASsB,cAAcD,IAEzBlC,QAAS,SAAiBa,EAAUuB,GAClCvB,EAASwB,WAAWD,IAEtBnC,mBAAoB,SAClBY,EACAyB,GAEAzB,EAAS0B,sBAAsBD,IAEjCpC,OAAQ,SAAgBW,EAAU2B,GAChC3B,EAAS4B,UAAUD,IAErBrC,MAAO,SAAeU,EAAU6B,GAC9B7B,EAAS8B,SAASD,IAEpBtC,YAAa,SAAqBS,EAAU+B,GAC1C/B,EAASgC,eAAeD,M,kBC1U5B,SAASE,EAAYC,EAAS7C,GAC5B6C,EAAQC,qBAAqBC,OAAOH,EAAaI,OAAOC,KAAKC,aAE7DvI,KAAKwI,SAAWN,EAChBlI,KAAKyI,WAAaP,EAAQC,qBAAqBO,kBAC/C1I,KAAK2I,QAAUtD,EACfrF,KAAK4I,QAAU,KACf5I,KAAK6I,KAAO,KACZ7I,KAAK8I,MAAQ,KACb9I,KAAK+I,UAAW,EAEhB/I,KAAKoC,OAAO8F,EAAQc,UAuPtB,SAASC,EAAQC,GACflJ,KAAKmJ,iBAAmBD,EACxBlJ,KAAKoJ,KAAOF,EAAGF,SACfhJ,KAAKqJ,UAAYH,EAAGI,cACpBtJ,KAAKuJ,gBAAkBL,EAAGM,wBAC1BxJ,KAAKyJ,eAAiBP,EAAGQ,mBACzB1J,KAAK2J,SAAW,GAChB3J,KAAK4I,QAAU,KACf5I,KAAK4J,QAAU,KACf5J,KAAK6J,aAAe,IAAI5B,EAAYjI,KAAMkJ,EAAGY,aA2S/C,SAAStJ,EAAgBuJ,EAAKC,EAAaC,GAMzCjK,KAAKoI,OAAO5H,EAAiB6H,OAAOC,KAAKC,aAEzCyB,EAAcA,GAAe,GAC7BC,EAAcA,GAAe,GAE7BjK,KAAK2J,SAAW,GAChB3J,KAAKkK,UAAY,GACjBlK,KAAKmK,WAAa,GAClBnK,KAAKoK,WAAa,KAClBpK,KAAKqK,QAAS,EAEdrK,KAAKqJ,UAAYY,EAAYnF,UAAY,GACzC9E,KAAKuJ,gBAAkBU,EAAY7E,oBAAsB,EACzDpF,KAAKsK,SAAWL,EAAY9E,SAAW,KACvCnF,KAAK2I,QAAUsB,EAAY5E,QAAU,GACrCrF,KAAKuK,OAASN,EAAY3E,OAAS,GACnCtF,KAAKwK,cAAe,OACYnK,IAA5B4J,EAAY1E,cACdvF,KAAKwK,aAAeP,EAAY1E,aAElCvF,KAAKyJ,gBAAiB,OACYpJ,IAA9B4J,EAAYzF,gBACdxE,KAAKyJ,eAAiBQ,EAAYzF,eAEpCxE,KAAKyK,eAAgB,OACYpK,IAA7B4J,EAAYlF,eACd/E,KAAKyK,cAAgBR,EAAYlF,cAEnC/E,KAAK0K,oBAAqB,OACYrK,IAAlC4J,EAAYpF,oBACd7E,KAAK0K,mBAAqBT,EAAYpF,mBAExC7E,KAAK2K,WAAaV,EAAYhF,WAAazE,EAAgBoK,WAC3D5K,KAAK6K,gBAAkBZ,EAAYjF,gBAAkBxE,EAAgBsK,gBACrE9K,KAAK+K,YAAcd,EAAY/E,YAAc1E,EAAgBwK,YAC7DhL,KAAKiL,YAAchB,EAAYtF,YAAcnE,EAAgB0K,WAC7DlL,KAAKmL,WAAalB,EAAYvF,WAAalE,EAAgB4K,WAC3DpL,KAAKqL,aAAepB,EAAYxF,aAAejE,EAAgB8K,cAC/DtL,KAAKuL,cAAgBtB,EAAYrF,cAAgB,WAEU,IAAvD4G,UAAUC,UAAUC,cAAcC,QAAQ,UAE5C3L,KAAKmL,WAAanL,KAAKqL,cAGzBrL,KAAK4L,eAEL5L,KAAK6L,WAAW7B,GAAa,GAC7BhK,KAAKoC,OAAO2H,GA1lBd9B,EAAY6D,UAAUC,MAAQ,WAC5B,IACIC,EACAC,EAFAC,EAAelM,KAInBA,KAAK6I,KAAOsD,SAASlJ,cAAc,OACnCjD,KAAK6I,KAAKuD,UAAYpM,KAAKyI,WACvBzI,KAAK+I,UACP/I,KAAKqM,OAGPrM,KAAKsM,WAAWC,mBAAmBC,YAAYxM,KAAK6I,MAGpD7I,KAAKyM,uBAAyBpE,OAAOC,KAAKoE,MAAMC,YAAY3M,KAAKgJ,SAAU,kBAAkB,WAC3FiD,EAAwBD,KAG1B3D,OAAOC,KAAKoE,MAAME,eAAe5M,KAAK6I,KAAM,aAAa,WACvDmD,GAAsB,EACtBC,GAAwB,KAG1B5D,OAAOC,KAAKoE,MAAME,eAAe5M,KAAK6I,KAAM,SAAS,SAAUgE,GAE7D,GADAb,GAAsB,GACjBC,EAAuB,CAC1B,IAAIa,EACAC,EACA7D,EAAKgD,EAAa1D,SAASL,qBAO/BE,OAAOC,KAAKoE,MAAMM,QAAQ9D,EAAI,QAASgD,EAAa1D,UACpDH,OAAOC,KAAKoE,MAAMM,QAAQ9D,EAAI,eAAgBgD,EAAa1D,UAIvDU,EAAG+D,mBAELF,EAAK7D,EAAGgE,aACRJ,EAAYZ,EAAa1D,SAAS2E,YAClCjE,EAAGF,SAASoE,UAAUN,GAEtBO,YAAW,WACTnE,EAAGF,SAASoE,UAAUN,GAEX,OAAPC,GAAgB7D,EAAGF,SAASsE,UAAYP,GAC1C7D,EAAGF,SAASuE,QAAQR,EAAK,KAE1B,MAILF,EAAEW,cAAe,EACbX,EAAEY,iBACJZ,EAAEY,sBAKRpF,OAAOC,KAAKoE,MAAME,eAAe5M,KAAK6I,KAAM,aAAa,WACvD,IAAIK,EAAKgD,EAAa1D,SAASL,qBAO/BE,OAAOC,KAAKoE,MAAMM,QAAQ9D,EAAI,YAAagD,EAAa1D,aAG1DH,OAAOC,KAAKoE,MAAME,eAAe5M,KAAK6I,KAAM,YAAY,WACtD,IAAIK,EAAKgD,EAAa1D,SAASL,qBAO/BE,OAAOC,KAAKoE,MAAMM,QAAQ9D,EAAI,WAAYgD,EAAa1D,cAQ3DP,EAAY6D,UAAU4B,SAAW,WAC3B1N,KAAK6I,MAAQ7I,KAAK6I,KAAK8E,aACzB3N,KAAK4N,OACLvF,OAAOC,KAAKoE,MAAMmB,eAAe7N,KAAKyM,wBACtCpE,OAAOC,KAAKoE,MAAMoB,uBAAuB9N,KAAK6I,MAC9C7I,KAAK6I,KAAK8E,WAAWI,YAAY/N,KAAK6I,MACtC7I,KAAK6I,KAAO,OAQhBZ,EAAY6D,UAAUkC,KAAO,WAC3B,GAAIhO,KAAK+I,SAAU,CACjB,IAAIkF,EAAMjO,KAAKkO,kBAAkBlO,KAAK4I,SACtC5I,KAAK6I,KAAKsF,MAAMC,IAAMH,EAAII,EAAI,KAC9BrO,KAAK6I,KAAKsF,MAAMG,KAAOL,EAAIM,EAAI,OAQnCtG,EAAY6D,UAAU8B,KAAO,WACvB5N,KAAK6I,OACP7I,KAAK6I,KAAKsF,MAAMK,QAAU,QAE5BxO,KAAK+I,UAAW,GAOlBd,EAAY6D,UAAUO,KAAO,WAC3B,GAAIrM,KAAK6I,KAAM,CACb,IAAI4F,EAAM,GAENC,EAAK1O,KAAK2O,oBAAoBC,MAAM,KACpCC,EAAUC,SAASJ,EAAG,GAAGK,QAAQ,aAAc,IAAK,IACpDC,EAAUF,SAASJ,EAAG,GAAGK,QAAQ,aAAc,IAAK,IACpDd,EAAMjO,KAAKkO,kBAAkBlO,KAAK4I,SACtC5I,KAAK6I,KAAKsF,MAAMc,QAAUjP,KAAKkP,UAAUjB,GACzCQ,EAAM,aAAezO,KAAKmP,KAAO,qCAAuCH,EAAU,aAAeH,EAAU,OACtG7O,KAAKwI,SAASL,qBAAqBuC,qBACtC+D,GAAO,eAAkB,EAAIO,EAAW,SAAY,EAAIH,EAAW7O,KAAKoP,QAAU,SAC3E,EAAIJ,EAAWhP,KAAKqP,SAAW,QAAW,EAAIR,EAAW,QAElEJ,GAAO,KACPzO,KAAK6I,KAAKyG,UAAYb,yCAERzO,KAAKuP,YAAY,GAFTd,YAGPzO,KAAKuP,YAAY,GAHVd,aAINzO,KAAKwP,WAJCf,eAKFzO,KAAKyP,UALHhB,mBAMAzO,KAAK0P,YANLjB,iBAOAzO,KAAK2P,YAPLlB,gBAQDzO,KAAK4P,WARJnB,qBASIzO,KAAK6P,gBATTpB,8BAWNzO,KAAKoP,OAXCX,kBAYDzO,KAAKqP,QAZJZ,QAaXzO,KAAK8I,MAAMgH,KAAO,SACG,qBAArB9P,KAAK8I,MAAMxD,OAA8C,KAArBtF,KAAK8I,MAAMxD,MACxDtF,KAAK6I,KAAKvD,MAAQtF,KAAKwI,SAASL,qBAAqB4H,WAErD/P,KAAK6I,KAAKvD,MAAQtF,KAAK8I,MAAMxD,MAE/BtF,KAAK6I,KAAKsF,MAAMK,QAAU,GAE5BxO,KAAK+I,UAAW,GASlBd,EAAY6D,UAAUkE,SAAW,SAAUC,GACzCjQ,KAAK8I,MAAQmH,EACb,IAAIC,EAAQC,KAAKC,IAAI,EAAGH,EAAKC,MAAQ,GACrCA,EAAQC,KAAKE,IAAIrQ,KAAK2I,QAAQ2H,OAAS,EAAGJ,GAC1C,IAAI/B,EAAQnO,KAAK2I,QAAQuH,GACzBlQ,KAAKmP,KAAOhB,EAAMoC,IAClBvQ,KAAKqP,QAAUlB,EAAMqC,OACrBxQ,KAAKoP,OAASjB,EAAMsC,MACpBzQ,KAAKuP,YAAcpB,EAAMuC,YAAc,CAAC,EAAG,GAC3C1Q,KAAK2Q,YAAcxC,EAAMyC,YAAc,CAAC9B,SAAS9O,KAAKqP,QAAU,EAAG,IAAKP,SAAS9O,KAAKoP,OAAS,EAAG,KAClGpP,KAAKwP,WAAarB,EAAM0C,WAAa,QACrC7Q,KAAKyP,UAAYtB,EAAM2C,UAAY,GACnC9Q,KAAK6P,gBAAkB1B,EAAM4C,gBAAkB,OAC/C/Q,KAAK2P,YAAcxB,EAAM6C,YAAc,OACvChR,KAAK4P,WAAazB,EAAM8C,WAAa,SACrCjR,KAAK0P,YAAcvB,EAAM+C,YAAc,mBACvClR,KAAK2O,oBAAsBR,EAAMgD,oBAAsB,OASzDlJ,EAAY6D,UAAUsF,UAAY,SAAUC,GAC1CrR,KAAK4I,QAAUyI,GAUjBpJ,EAAY6D,UAAUoD,UAAY,SAAUjB,GAC1C,IAAIE,EAAQ,GAIZ,OAHAA,EAAMmD,KAAK,oBACXnD,EAAMmD,KAAK,4BAA8BrD,EAAII,EAAI,aAAeJ,EAAIM,EAAI,OACxEJ,EAAMmD,KAAK,UAAYtR,KAAKoP,OAAS,eAAiBpP,KAAKqP,QAAU,OAC9DlB,EAAMoD,KAAK,KAUpBtJ,EAAY6D,UAAUoC,kBAAoB,SAAUsD,GAClD,IAAIvD,EAAMjO,KAAKyR,gBAAgBC,qBAAqBF,GAKpD,OAJAvD,EAAIM,GAAKvO,KAAK2Q,YAAY,GAC1B1C,EAAII,GAAKrO,KAAK2Q,YAAY,GAC1B1C,EAAIM,EAAIO,SAASb,EAAIM,EAAG,IACxBN,EAAII,EAAIS,SAASb,EAAII,EAAG,IACjBJ,GA+BThF,EAAQ6C,UAAU6F,QAAU,WAC1B,OAAO3R,KAAK2J,SAAS2G,QAWvBrH,EAAQ6C,UAAU8F,WAAa,WAC7B,OAAO5R,KAAK2J,UAWdV,EAAQ6C,UAAU+F,UAAY,WAC5B,OAAO7R,KAAK4I,SAUdK,EAAQ6C,UAAU9C,OAAS,WACzB,OAAOhJ,KAAKoJ,MAUdH,EAAQ6C,UAAU3D,mBAAqB,WACrC,OAAOnI,KAAKmJ,kBAUdF,EAAQ6C,UAAUqB,UAAY,WAC5B,IAAI2E,EACAC,EAAS,IAAI1J,OAAOC,KAAK0J,aAAahS,KAAK4I,QAAS5I,KAAK4I,SACzDqJ,EAAUjS,KAAK4R,aACnB,IAAKE,EAAI,EAAGA,EAAIG,EAAQ3B,OAAQwB,IAC9BC,EAAO3J,OAAO6J,EAAQH,GAAGI,eAE3B,OAAOH,GAST9I,EAAQ6C,UAAUqG,OAAS,WACzBnS,KAAK6J,aAAazH,OAAO,MACzBpC,KAAK2J,SAAW,UACT3J,KAAK2J,UAWdV,EAAQ6C,UAAUsG,UAAY,SAAUC,GACtC,IAAIP,EACAQ,EACAvF,EAEJ,GAAI/M,KAAKuS,sBAAsBF,GAC7B,OAAO,EAGT,GAAKrS,KAAK4I,SAIR,GAAI5I,KAAKyJ,eAAgB,CACvB,IAAI+I,EAAIxS,KAAK2J,SAAS2G,OAAS,EAC3BmC,GAAOzS,KAAK4I,QAAQ6J,OAASD,EAAI,GAAKH,EAAOH,cAAcO,OAASD,EACpEE,GAAO1S,KAAK4I,QAAQ8J,OAASF,EAAI,GAAKH,EAAOH,cAAcQ,OAASF,EACxExS,KAAK4I,QAAU,IAAIP,OAAOC,KAAKqK,OAAOF,EAAKC,GAC3C1S,KAAK4S,yBARP5S,KAAK4I,QAAUyJ,EAAOH,cACtBlS,KAAK4S,mBAgBP,GALAP,EAAOQ,SAAU,EACjB7S,KAAK2J,SAAS2H,KAAKe,GAEnBC,EAAStS,KAAK2J,SAAS2G,OAEZ,QADXvD,EAAK/M,KAAKmJ,iBAAiB+D,eACRlN,KAAKoJ,KAAKkE,UAAYP,EAEnCsF,EAAOrJ,WAAahJ,KAAKoJ,MAC3BiJ,EAAOjQ,OAAOpC,KAAKoJ,WAEhB,GAAIkJ,EAAStS,KAAKuJ,gBAEnB8I,EAAOrJ,WAAahJ,KAAKoJ,MAC3BiJ,EAAOjQ,OAAOpC,KAAKoJ,WAEhB,GAAIkJ,IAAWtS,KAAKuJ,gBAEzB,IAAKuI,EAAI,EAAGA,EAAIQ,EAAQR,IACtB9R,KAAK2J,SAASmI,GAAG1P,OAAO,WAG1BiQ,EAAOjQ,OAAO,MAIhB,OADApC,KAAK8S,eACE,GAWT7J,EAAQ6C,UAAUiH,wBAA0B,SAAUV,GACpD,OAAOrS,KAAK4J,QAAQoJ,SAASX,EAAOH,gBAOtCjJ,EAAQ6C,UAAU8G,iBAAmB,WACnC,IAAIb,EAAS,IAAI1J,OAAOC,KAAK0J,aAAahS,KAAK4I,QAAS5I,KAAK4I,SAC7D5I,KAAK4J,QAAU5J,KAAKmJ,iBAAiB8J,kBAAkBlB,IAOzD9I,EAAQ6C,UAAUgH,YAAc,WAC9B,IAAIR,EAAStS,KAAK2J,SAAS2G,OACvBvD,EAAK/M,KAAKmJ,iBAAiB+D,aAE/B,GAAW,OAAPH,GAAe/M,KAAKoJ,KAAKkE,UAAYP,EACvC/M,KAAK6J,aAAa+D,YAIpB,GAAI0E,EAAStS,KAAKuJ,gBAEhBvJ,KAAK6J,aAAa+D,WAFpB,CAMA,IAAIsF,EAAYlT,KAAKmJ,iBAAiBW,YAAYwG,OAC9CL,EAAOjQ,KAAKmJ,iBAAiBgK,eAAtBnT,CAAsCA,KAAK2J,SAAUuJ,GAChElT,KAAK6J,aAAauH,UAAUpR,KAAK4I,SACjC5I,KAAK6J,aAAamG,SAASC,GAC3BjQ,KAAK6J,aAAawC,SAUpBpD,EAAQ6C,UAAUyG,sBAAwB,SAAUF,GAClD,IAAIP,EACJ,GAAI9R,KAAK2J,SAASgC,QAChB,OAA0C,IAAnC3L,KAAK2J,SAASgC,QAAQ0G,GAE7B,IAAKP,EAAI,EAAGA,EAAI9R,KAAK2J,SAAS2G,OAAQwB,IACpC,GAAIO,IAAWrS,KAAK2J,SAASmI,GAC3B,OAAO,EAIb,OAAO,GAoJTtR,EAAgBsL,UAAUC,MAAQ,WAChC,IAAIqH,EAAmBpT,KAEvBA,KAAKoK,WAAapK,KAAKgJ,SACvBhJ,KAAKqK,QAAS,EAEdrK,KAAK8C,UAGL9C,KAAKmK,WAAa,CAChB9B,OAAOC,KAAKoE,MAAMC,YAAY3M,KAAKgJ,SAAU,gBAAgB,WAC3DoK,EAAiBC,gBAAe,GAM5BrT,KAAKsN,aAAetN,KAAKsT,IAAI,YAAc,IAAMtT,KAAKsN,YAActN,KAAKsT,IAAI,YAC/EjL,OAAOC,KAAKoE,MAAMM,QAAQhN,KAAM,WAGpCqI,OAAOC,KAAKoE,MAAMC,YAAY3M,KAAKgJ,SAAU,QAAQ,WACnDoK,EAAiBG,eAYvB/S,EAAgBsL,UAAU4B,SAAW,WACnC,IAAIoE,EAGJ,IAAKA,EAAI,EAAGA,EAAI9R,KAAK2J,SAAS2G,OAAQwB,IAChC9R,KAAK2J,SAASmI,GAAG9I,WAAahJ,KAAKoK,YACrCpK,KAAK2J,SAASmI,GAAG1P,OAAOpC,KAAKoK,YAKjC,IAAK0H,EAAI,EAAGA,EAAI9R,KAAKkK,UAAUoG,OAAQwB,IACrC9R,KAAKkK,UAAU4H,GAAGK,SAKpB,IAHAnS,KAAKkK,UAAY,GAGZ4H,EAAI,EAAGA,EAAI9R,KAAKmK,WAAWmG,OAAQwB,IACtCzJ,OAAOC,KAAKoE,MAAMmB,eAAe7N,KAAKmK,WAAW2H,IAEnD9R,KAAKmK,WAAa,GAElBnK,KAAKoK,WAAa,KAClBpK,KAAKqK,QAAS,GAQhB7J,EAAgBsL,UAAUkC,KAAO,aAMjCxN,EAAgBsL,UAAUF,aAAe,WACvC,IAAIkG,EAAG0B,EACP,KAAIxT,KAAK2I,QAAQ2H,OAAS,GAI1B,IAAKwB,EAAI,EAAGA,EAAI9R,KAAK+K,YAAYuF,OAAQwB,IACvC0B,EAAOxT,KAAK+K,YAAY+G,GACxB9R,KAAK2I,QAAQ2I,KAAK,CAChBf,IAAKvQ,KAAK2K,YAAcmH,EAAI,GAAK,IAAM9R,KAAK6K,gBAC5C2F,OAAQgD,EACR/C,MAAO+C,KASbhT,EAAgBsL,UAAU2H,gBAAkB,WAC1C,IAAI3B,EACAG,EAAUjS,KAAK4R,aACfG,EAAS,IAAI1J,OAAOC,KAAK0J,aAC7B,IAAKF,EAAI,EAAGA,EAAIG,EAAQ3B,OAAQwB,IAC9BC,EAAO3J,OAAO6J,EAAQH,GAAGI,eAG3BlS,KAAKgJ,SAASoE,UAAU2E,IAS1BvR,EAAgBsL,UAAUxC,YAAc,WACtC,OAAOtJ,KAAKqJ,WASd7I,EAAgBsL,UAAUhF,YAAc,SAAUhC,GAChD9E,KAAKqJ,UAAYvE,GASnBtE,EAAgBsL,UAAUtC,sBAAwB,WAChD,OAAOxJ,KAAKuJ,iBAQd/I,EAAgBsL,UAAUpE,sBAAwB,SAAUtC,GAC1DpF,KAAKuJ,gBAAkBnE,GASzB5E,EAAgBsL,UAAUoB,WAAa,WACrC,OAAOlN,KAAKsK,UASd9J,EAAgBsL,UAAUtE,WAAa,SAAUrC,GAC/CnF,KAAKsK,SAAWnF,GASlB3E,EAAgBsL,UAAUhC,UAAY,WACpC,OAAO9J,KAAK2I,SASdnI,EAAgBsL,UAAUlE,UAAY,SAAUvC,GAC9CrF,KAAK2I,QAAUtD,GASjB7E,EAAgBsL,UAAUiE,SAAW,WACnC,OAAO/P,KAAKuK,QASd/J,EAAgBsL,UAAUhE,SAAW,SAAUxC,GAC7CtF,KAAKuK,OAASjF,GAShB9E,EAAgBsL,UAAUmB,eAAiB,WACzC,OAAOjN,KAAKwK,cASdhK,EAAgBsL,UAAU9D,eAAiB,SAAUzC,GACnDvF,KAAKwK,aAAejF,GAStB/E,EAAgBsL,UAAUpC,iBAAmB,WAC3C,OAAO1J,KAAKyJ,gBASdjJ,EAAgBsL,UAAU5F,iBAAmB,SAAU1B,GACrDxE,KAAKyJ,eAAiBjF,GASxBhE,EAAgBsL,UAAU4H,gBAAkB,WAC1C,OAAO1T,KAAKyK,eASdjK,EAAgBsL,UAAU9E,gBAAkB,SAAUjC,GACpD/E,KAAKyK,cAAgB1F,GASvBvE,EAAgBsL,UAAU6H,qBAAuB,WAC/C,OAAO3T,KAAK0K,oBASdlK,EAAgBsL,UAAUlF,qBAAuB,SAAU/B,GACzD7E,KAAK0K,mBAAqB7F,GAS5BrE,EAAgBsL,UAAU8H,kBAAoB,WAC5C,OAAO5T,KAAK6K,iBASdrK,EAAgBsL,UAAU5E,kBAAoB,SAAUlC,GACtDhF,KAAK6K,gBAAkB7F,GASzBxE,EAAgBsL,UAAU+H,aAAe,WACvC,OAAO7T,KAAK2K,YASdnK,EAAgBsL,UAAU1E,aAAe,SAAUnC,GACjDjF,KAAK2K,WAAa1F,GASpBzE,EAAgBsL,UAAUgI,cAAgB,WACxC,OAAO9T,KAAK+K,aASdvK,EAAgBsL,UAAUxE,cAAgB,SAAUpC,GAClDlF,KAAK+K,YAAc7F,GASrB1E,EAAgBsL,UAAUqH,cAAgB,WACxC,OAAOnT,KAAKiL,aAUdzK,EAAgBsL,UAAUtF,cAAgB,SAAU7B,GAClD3E,KAAKiL,YAActG,GASrBnE,EAAgBsL,UAAUiI,eAAiB,WACzC,OAAO/T,KAAKqL,cASd7K,EAAgBsL,UAAU1F,eAAiB,SAAU3B,GACnDzE,KAAKqL,aAAe5G,GAStBjE,EAAgBsL,UAAUpD,gBAAkB,WAC1C,OAAO1I,KAAKuL,eASd/K,EAAgBsL,UAAUpF,gBAAkB,SAAU9B,GACpD5E,KAAKuL,cAAgB3G,GASvBpE,EAAgBsL,UAAU8F,WAAa,WACrC,OAAO5R,KAAK2J,UASdnJ,EAAgBsL,UAAUkI,gBAAkB,WAC1C,OAAOhU,KAAK2J,SAAS2G,QASvB9P,EAAgBsL,UAAUmI,YAAc,WACtC,OAAOjU,KAAKkK,WASd1J,EAAgBsL,UAAUoI,iBAAmB,WAC3C,OAAOlU,KAAKkK,UAAUoG,QAWxB9P,EAAgBsL,UAAUsG,UAAY,SAAUC,EAAQ8B,GACtDnU,KAAKoU,cAAc/B,GACd8B,GACHnU,KAAKuT,WAYT/S,EAAgBsL,UAAUD,WAAa,SAAUoG,EAASkC,GACxD,IAAI9U,EACJ,IAAKA,KAAO4S,EACNA,EAAQoC,eAAehV,IACzBW,KAAKoU,cAAcnC,EAAQ5S,IAG1B8U,GACHnU,KAAKuT,WAUT/S,EAAgBsL,UAAUsI,cAAgB,SAAU/B,GAElD,GAAIA,EAAOiC,eAAgB,CACzB,IAAIlB,EAAmBpT,KACvBqI,OAAOC,KAAKoE,MAAMC,YAAY0F,EAAQ,WAAW,WAC3Ce,EAAiB/I,SACnBrK,KAAK6S,SAAU,EACfO,EAAiBtQ,cAIvBuP,EAAOQ,SAAU,EACjB7S,KAAK2J,SAAS2H,KAAKe,IAarB7R,EAAgBsL,UAAUyI,aAAe,SAAUlC,EAAQ8B,GACzD,IAAIK,EAAUxU,KAAKyU,cAAcpC,GAMjC,OAJK8B,GAAcK,GACjBxU,KAAK8C,UAGA0R,GAaThU,EAAgBsL,UAAU4I,cAAgB,SAAUzC,EAASkC,GAC3D,IAAIrC,EAAG6C,EACHH,GAAU,EAEd,IAAK1C,EAAI,EAAGA,EAAIG,EAAQ3B,OAAQwB,IAC9B6C,EAAI3U,KAAKyU,cAAcxC,EAAQH,IAC/B0C,EAAUA,GAAWG,EAOvB,OAJKR,GAAcK,GACjBxU,KAAK8C,UAGA0R,GAUThU,EAAgBsL,UAAU2I,cAAgB,SAAUpC,GAClD,IAAIP,EACA5B,GAAS,EACb,GAAIlQ,KAAK2J,SAASgC,QAChBuE,EAAQlQ,KAAK2J,SAASgC,QAAQ0G,QAE9B,IAAKP,EAAI,EAAGA,EAAI9R,KAAK2J,SAAS2G,OAAQwB,IACpC,GAAIO,IAAWrS,KAAK2J,SAASmI,GAAI,CAC/B5B,EAAQ4B,EACR,MAKN,OAAe,IAAX5B,IAKJmC,EAAOjQ,OAAO,MACdpC,KAAK2J,SAASiL,OAAO1E,EAAO,IACrB,IAQT1P,EAAgBsL,UAAU+I,aAAe,WACvC7U,KAAKqT,gBAAe,GACpBrT,KAAK2J,SAAW,IAQlBnJ,EAAgBsL,UAAUhJ,QAAU,WAClC,IAAIgS,EAAc9U,KAAKkK,UAAU6K,QACjC/U,KAAKkK,UAAY,GACjBlK,KAAKqT,gBAAe,GACpBrT,KAAKuT,UAILlG,YAAW,WACT,IAAIyE,EACJ,IAAKA,EAAI,EAAGA,EAAIgD,EAAYxE,OAAQwB,IAClCgD,EAAYhD,GAAGK,WAEhB,IAWL3R,EAAgBsL,UAAUmH,kBAAoB,SAAUlB,GACtD,IAAIiD,EAAahV,KAAKyR,gBAGlBwD,EAAK,IAAI5M,OAAOC,KAAKqK,OAAOZ,EAAOmD,eAAezC,MAClDV,EAAOmD,eAAexC,OACtByC,EAAK,IAAI9M,OAAOC,KAAKqK,OAAOZ,EAAOqD,eAAe3C,MAClDV,EAAOqD,eAAe1C,OAGtB2C,EAAQL,EAAWtD,qBAAqBuD,GAC5CI,EAAM9G,GAAKvO,KAAKqJ,UAChBgM,EAAMhH,GAAKrO,KAAKqJ,UAEhB,IAAIiM,EAAQN,EAAWtD,qBAAqByD,GAC5CG,EAAM/G,GAAKvO,KAAKqJ,UAChBiM,EAAMjH,GAAKrO,KAAKqJ,UAGhB,IAAIkM,EAAKP,EAAWQ,qBAAqBH,GACrCI,EAAKT,EAAWQ,qBAAqBF,GAMzC,OAHAvD,EAAO3J,OAAOmN,GACdxD,EAAO3J,OAAOqN,GAEP1D,GAOTvR,EAAgBsL,UAAUyH,QAAU,WAClCvT,KAAK0V,gBAAgB,IAWvBlV,EAAgBsL,UAAUuH,eAAiB,SAAUsC,GACnD,IAAI7D,EAAGO,EAEP,IAAKP,EAAI,EAAGA,EAAI9R,KAAKkK,UAAUoG,OAAQwB,IACrC9R,KAAKkK,UAAU4H,GAAGK,SAKpB,IAHAnS,KAAKkK,UAAY,GAGZ4H,EAAI,EAAGA,EAAI9R,KAAK2J,SAAS2G,OAAQwB,KACpCO,EAASrS,KAAK2J,SAASmI,IAChBe,SAAU,EACb8C,GACFtD,EAAOjQ,OAAO,OAcpB5B,EAAgBsL,UAAU8J,uBAAyB,SAAUC,EAAIC,GAC/D,IACIC,GAAQD,EAAGrD,MAAQoD,EAAGpD,OAAStC,KAAK6F,GAAK,IACzCC,GAAQH,EAAGpD,MAAQmD,EAAGnD,OAASvC,KAAK6F,GAAK,IACzCE,EAAI/F,KAAKgG,IAAIJ,EAAO,GAAK5F,KAAKgG,IAAIJ,EAAO,GAC3C5F,KAAKiG,IAAIP,EAAGpD,MAAQtC,KAAK6F,GAAK,KAAO7F,KAAKiG,IAAIN,EAAGrD,MAAQtC,KAAK6F,GAAK,KACnE7F,KAAKgG,IAAIF,EAAO,GAAK9F,KAAKgG,IAAIF,EAAO,GAGvC,OARQ,MAMA,EAAI9F,KAAKkG,MAAMlG,KAAKmG,KAAKJ,GAAI/F,KAAKmG,KAAK,EAAIJ,MAarD1V,EAAgBsL,UAAUyK,kBAAoB,SAAUlE,EAAQN,GAC9D,OAAOA,EAAOiB,SAASX,EAAOH,gBAShC1R,EAAgBsL,UAAU0K,qBAAuB,SAAUnE,GACzD,IAAIP,EAAG2E,EAAGvO,EAASmJ,EACfqF,EAAW,IACXC,EAAiB,KACrB,IAAK7E,EAAI,EAAGA,EAAI9R,KAAKkK,UAAUoG,OAAQwB,KAErCT,GADAnJ,EAAUlI,KAAKkK,UAAU4H,IACRD,eAEf4E,EAAIzW,KAAK4V,uBAAuBvE,EAAQgB,EAAOH,gBACvCwE,IACNA,EAAWD,EACXE,EAAiBzO,GAKnByO,GAAkBA,EAAe5D,wBAAwBV,GAC3DsE,EAAevE,UAAUC,KAEzBnK,EAAU,IAAIe,EAAQjJ,OACdoS,UAAUC,GAClBrS,KAAKkK,UAAUoH,KAAKpJ,KAYxB1H,EAAgBsL,UAAU4J,gBAAkB,SAAUkB,GACpD,IAAI9E,EAAGO,EACHwE,EACAzD,EAAmBpT,KACvB,GAAKA,KAAKqK,OAAV,CAKe,IAAXuM,IAQFvO,OAAOC,KAAKoE,MAAMM,QAAQhN,KAAM,kBAAmBA,MAEhB,qBAAxBA,KAAK8W,iBACdC,aAAa/W,KAAK8W,uBACX9W,KAAK8W,iBASdD,EADE7W,KAAKgJ,SAASsE,UAAY,EAChB,IAAIjF,OAAOC,KAAK0J,aAAahS,KAAKgJ,SAASmE,YAAYiI,eACjEpV,KAAKgJ,SAASmE,YAAY+H,gBAEhB,IAAI7M,OAAOC,KAAK0J,aAAa,IAAI3J,OAAOC,KAAKqK,OAAO,mBAAoB,iBAAkB,IAAItK,OAAOC,KAAKqK,QAAQ,kBAAmB,kBAEnJ,IAAIZ,EAAS/R,KAAKiT,kBAAkB4D,GAEhCG,EAAQ7G,KAAKE,IAAIuG,EAAS5W,KAAKmL,WAAYnL,KAAK2J,SAAS2G,QAE7D,IAAKwB,EAAI8E,EAAQ9E,EAAIkF,EAAOlF,MAC1BO,EAASrS,KAAK2J,SAASmI,IACXe,SAAW7S,KAAKuW,kBAAkBlE,EAAQN,MAC/C/R,KAAKyK,eAAkBzK,KAAKyK,eAAiB4H,EAAO4E,eACvDjX,KAAKwW,qBAAqBnE,GAK5B2E,EAAQhX,KAAK2J,SAAS2G,OACxBtQ,KAAK8W,eAAiBzJ,YAAW,WAC/B+F,EAAiBsC,gBAAgBsB,KAChC,WAEIhX,KAAK8W,eASZzO,OAAOC,KAAKoE,MAAMM,QAAQhN,KAAM,gBAAiBA,SAarDQ,EAAgBsL,UAAU1D,OAAS,SAAU8O,EAAMC,GACjD,OAAQ,SAAUrR,GAChB,IAAIsR,EACJ,IAAKA,KAAYtR,EAAOgG,UACtB9L,KAAK8L,UAAUsL,GAAYtR,EAAOgG,UAAUsL,GAE9C,OAAOpX,MACNG,MAAM+W,EAAM,CAACC,KAclB3W,EAAgB0K,WAAa,SAAU+G,EAASiB,GAM9C,IALA,IAAIhD,EAAQ,EAERmH,EAAQpF,EAAQ3B,OAAOgH,WAEvBC,EAAKF,EACK,IAAPE,GACLA,EAAKzI,SAASyI,EAAK,GAAI,IACvBrH,IAIF,MAAO,CACLJ,KAAMuH,EACNnH,MAHFA,EAAQC,KAAKE,IAAIH,EAAOgD,GAItB5N,MAbU,KAwBd9E,EAAgB4K,WAAa,IAS7B5K,EAAgB8K,cAAgB,IAShC9K,EAAgBoK,WAAa,sGAS7BpK,EAAgBsK,gBAAkB,MASlCtK,EAAgBwK,YAAc,CAAC,GAAI,GAAI,GAAI,GAAI,IAE/CnM,EAAOC,QAAU0B","file":"static/js/5.7ac807e2.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","\"use strict\"\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true,\n})\nexports.MarkerClusterer = undefined\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\")\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2)\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\")\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf)\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\")\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2)\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\")\n\nvar _createClass3 = _interopRequireDefault(_createClass2)\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\")\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(\n  _possibleConstructorReturn2\n)\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\")\n\nvar _inherits3 = _interopRequireDefault(_inherits2)\n\nvar _MarkerClusterer$chil\n\nvar _react = require(\"react\")\n\nvar _react2 = _interopRequireDefault(_react)\n\nvar _propTypes = require(\"prop-types\")\n\nvar _propTypes2 = _interopRequireDefault(_propTypes)\n\nvar _markerClustererPlus = require(\"marker-clusterer-plus\")\n\nvar _markerClustererPlus2 = _interopRequireDefault(_markerClustererPlus)\n\nvar _MapChildHelper = require(\"../../utils/MapChildHelper\")\n\nvar _constants = require(\"../../constants\")\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj }\n}\n\n/**\n * A wrapper around `MarkerClusterer`\n *\n * @see https://github.com/mahnunchik/markerclustererplus/blob/master/docs/reference.html\n */\nvar MarkerClusterer = (exports.MarkerClusterer = (function(\n  _React$PureComponent\n) {\n  ;(0, _inherits3.default)(MarkerClusterer, _React$PureComponent)\n\n  /*\n   * @see https://github.com/mahnunchik/markerclustererplus/blob/master/docs/reference.html\n   */\n  function MarkerClusterer(props, context) {\n    ;(0, _classCallCheck3.default)(this, MarkerClusterer)\n\n    var _this = (0, _possibleConstructorReturn3.default)(\n      this,\n      (\n        MarkerClusterer.__proto__ ||\n        (0, _getPrototypeOf2.default)(MarkerClusterer)\n      ).call(this, props, context)\n    )\n\n    var markerClusterer = new _markerClustererPlus2.default()\n    ;(0, _MapChildHelper.construct)(\n      MarkerClusterer.propTypes,\n      updaterMap,\n      _this.props,\n      markerClusterer\n    )\n    markerClusterer.setMap(_this.context[_constants.MAP])\n    _this.state = (0, _defineProperty3.default)(\n      {},\n      _constants.MARKER_CLUSTERER,\n      markerClusterer\n    )\n    return _this\n  }\n\n  ;(0, _createClass3.default)(MarkerClusterer, [\n    {\n      key: \"getChildContext\",\n      value: function getChildContext() {\n        var _ref\n\n        var markerClusterer = this.state[_constants.MARKER_CLUSTERER]\n        return (\n          (_ref = {}),\n          (0, _defineProperty3.default)(\n            _ref,\n            _constants.ANCHOR,\n            markerClusterer\n          ),\n          (0, _defineProperty3.default)(\n            _ref,\n            _constants.MARKER_CLUSTERER,\n            markerClusterer\n          ),\n          _ref\n        )\n      },\n    },\n    {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        ;(0, _MapChildHelper.componentDidMount)(\n          this,\n          this.state[_constants.MARKER_CLUSTERER],\n          eventMap\n        )\n      },\n    },\n    {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        ;(0, _MapChildHelper.componentDidUpdate)(\n          this,\n          this.state[_constants.MARKER_CLUSTERER],\n          eventMap,\n          updaterMap,\n          prevProps\n        )\n        this.state[_constants.MARKER_CLUSTERER].repaint()\n      },\n    },\n    {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        ;(0, _MapChildHelper.componentWillUnmount)(this)\n        var markerClusterer = this.state[_constants.MARKER_CLUSTERER]\n        if (markerClusterer) {\n          markerClusterer.setMap(null)\n        }\n      },\n    },\n    {\n      key: \"render\",\n      value: function render() {\n        var children = this.props.children\n\n        return _react2.default.createElement(\"div\", null, children)\n      },\n    },\n  ])\n  return MarkerClusterer\n})(_react2.default.PureComponent))\n\nMarkerClusterer.propTypes = {\n  /**\n   * @type boolean\n   */\n  defaultAverageCenter: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  defaultBatchSizeIE: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  defaultBatchSize: _propTypes2.default.number,\n\n  /**\n   * @type function\n   */\n  defaultCalculator: _propTypes2.default.func,\n\n  /**\n   * @type string\n   */\n  defaultClusterClass: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  defaultEnableRetinaIcons: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  defaultGridSize: _propTypes2.default.number,\n\n  /**\n   * @type boolean\n   */\n  defaultIgnoreHidden: _propTypes2.default.bool,\n\n  /**\n   * @type string\n   */\n  defaultImageExtension: _propTypes2.default.string,\n\n  /**\n   * @type string\n   */\n  defaultImagePath: _propTypes2.default.string,\n\n  /**\n   * @type Array\n   */\n  defaultImageSizes: _propTypes2.default.array,\n\n  /**\n   * @type number\n   */\n  defaultMaxZoom: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  defaultMinimumClusterSize: _propTypes2.default.number,\n\n  /**\n   * @type Array\n   */\n  defaultStyles: _propTypes2.default.array,\n\n  /**\n   * @type string\n   */\n  defaultTitle: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  defaultZoomOnClick: _propTypes2.default.bool,\n\n  /**\n   * @type boolean\n   */\n  averageCenter: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  batchSizeIE: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  batchSize: _propTypes2.default.number,\n\n  /**\n   * @type function\n   */\n  calculator: _propTypes2.default.func,\n\n  /**\n   * @type string\n   */\n  clusterClass: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  enableRetinaIcons: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  gridSize: _propTypes2.default.number,\n\n  /**\n   * @type boolean\n   */\n  ignoreHidden: _propTypes2.default.bool,\n\n  /**\n   * @type string\n   */\n  imageExtension: _propTypes2.default.string,\n\n  /**\n   * @type string\n   */\n  imagePath: _propTypes2.default.string,\n\n  /**\n   * @type Array\n   */\n  imageSizes: _propTypes2.default.array,\n\n  /**\n   * @type number\n   */\n  maxZoom: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  minimumClusterSize: _propTypes2.default.number,\n\n  /**\n   * @type Array\n   */\n  styles: _propTypes2.default.array,\n\n  /**\n   * @type string\n   */\n  title: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  zoomOnClick: _propTypes2.default.bool,\n\n  /**\n   * function\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onClusteringBegin: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onClusteringEnd: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onMouseOut: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onMouseOver: _propTypes2.default.func,\n}\nMarkerClusterer.contextTypes = (0, _defineProperty3.default)(\n  {},\n  _constants.MAP,\n  _propTypes2.default.object\n)\nMarkerClusterer.childContextTypes = ((_MarkerClusterer$chil = {}),\n(0, _defineProperty3.default)(\n  _MarkerClusterer$chil,\n  _constants.ANCHOR,\n  _propTypes2.default.object\n),\n(0, _defineProperty3.default)(\n  _MarkerClusterer$chil,\n  _constants.MARKER_CLUSTERER,\n  _propTypes2.default.object\n),\n_MarkerClusterer$chil)\nexports.default = MarkerClusterer\n\nvar eventMap = {\n  onClick: \"click\",\n  onClusteringBegin: \"clusteringbegin\",\n  onClusteringEnd: \"clusteringend\",\n  onMouseOut: \"mouseout\",\n  onMouseOver: \"mouseover\",\n}\n\nvar updaterMap = {\n  averageCenter: function averageCenter(instance, _averageCenter) {\n    instance.setAverageCenter(_averageCenter)\n  },\n  batchSizeIE: function batchSizeIE(instance, _batchSizeIE) {\n    instance.setBatchSizeIE(_batchSizeIE)\n  },\n  batchSize: function batchSize(instance, _batchSize) {\n    instance.setBatchSize(_batchSize)\n  },\n  calculator: function calculator(instance, _calculator) {\n    instance.setCalculator(_calculator)\n  },\n  clusterClass: function clusterClass(instance, _clusterClass) {\n    instance.setClusterClass(_clusterClass)\n  },\n  enableRetinaIcons: function enableRetinaIcons(instance, _enableRetinaIcons) {\n    instance.setEnableRetinaIcons(_enableRetinaIcons)\n  },\n  gridSize: function gridSize(instance, _gridSize) {\n    instance.setGridSize(_gridSize)\n  },\n  ignoreHidden: function ignoreHidden(instance, _ignoreHidden) {\n    instance.setIgnoreHidden(_ignoreHidden)\n  },\n  imageExtension: function imageExtension(instance, _imageExtension) {\n    instance.setImageExtension(_imageExtension)\n  },\n  imagePath: function imagePath(instance, _imagePath) {\n    instance.setImagePath(_imagePath)\n  },\n  imageSizes: function imageSizes(instance, _imageSizes) {\n    instance.setImageSizes(_imageSizes)\n  },\n  maxZoom: function maxZoom(instance, _maxZoom) {\n    instance.setMaxZoom(_maxZoom)\n  },\n  minimumClusterSize: function minimumClusterSize(\n    instance,\n    _minimumClusterSize\n  ) {\n    instance.setMinimumClusterSize(_minimumClusterSize)\n  },\n  styles: function styles(instance, _styles) {\n    instance.setStyles(_styles)\n  },\n  title: function title(instance, _title) {\n    instance.setTitle(_title)\n  },\n  zoomOnClick: function zoomOnClick(instance, _zoomOnClick) {\n    instance.setZoomOnClick(_zoomOnClick)\n  },\n}\n","/**\n * @name MarkerClustererPlus for Google Maps V3\n * @version 2.1.2 [May 28, 2014]\n * @author Gary Little\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of markers.\n * <p>\n * This is an enhanced V3 implementation of the\n * <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/\"\n * >V2 MarkerClusterer</a> by Xiaoxi Wu. It is based on the\n * <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/\"\n * >V3 MarkerClusterer</a> port by Luke Mahe. MarkerClustererPlus was created by Gary Little.\n * <p>\n * v2.0 release: MarkerClustererPlus v2.0 is backward compatible with MarkerClusterer v1.0. It\n *  adds support for the <code>ignoreHidden</code>, <code>title</code>, <code>batchSizeIE</code>,\n *  and <code>calculator</code> properties as well as support for four more events. It also allows\n *  greater control over the styling of the text that appears on the cluster marker. The\n *  documentation has been significantly improved and the overall code has been simplified and\n *  polished. Very large numbers of markers can now be managed without causing Javascript timeout\n *  errors on Internet Explorer. Note that the name of the <code>clusterclick</code> event has been\n *  deprecated. The new name is <code>click</code>, so please change your application code now.\n */\n\n/**\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @name ClusterIconStyle\n * @class This class represents the object for values in the <code>styles</code> array passed\n *  to the {@link MarkerClusterer} constructor. The element in this array that is used to\n *  style the cluster icon is determined by calling the <code>calculator</code> function.\n *\n * @property {string} url The URL of the cluster icon image file. Required.\n * @property {number} height The display height (in pixels) of the cluster icon. Required.\n * @property {number} width The display width (in pixels) of the cluster icon. Required.\n * @property {Array} [anchorText] The position (in pixels) from the center of the cluster icon to\n *  where the text label is to be centered and drawn. The format is <code>[yoffset, xoffset]</code>\n *  where <code>yoffset</code> increases as you go down from center and <code>xoffset</code>\n *  increases to the right of center. The default is <code>[0, 0]</code>.\n * @property {Array} [anchorIcon] The anchor position (in pixels) of the cluster icon. This is the\n *  spot on the cluster icon that is to be aligned with the cluster position. The format is\n *  <code>[yoffset, xoffset]</code> where <code>yoffset</code> increases as you go down and\n *  <code>xoffset</code> increases to the right of the top-left corner of the icon. The default\n *  anchor position is the center of the cluster icon.\n * @property {string} [textColor=\"black\"] The color of the label text shown on the\n *  cluster icon.\n * @property {number} [textSize=11] The size (in pixels) of the label text shown on the\n *  cluster icon.\n * @property {string} [textDecoration=\"none\"] The value of the CSS <code>text-decoration</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontWeight=\"bold\"] The value of the CSS <code>font-weight</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontStyle=\"normal\"] The value of the CSS <code>font-style</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontFamily=\"Arial,sans-serif\"] The value of the CSS <code>font-family</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [backgroundPosition=\"0 0\"] The position of the cluster icon image\n *  within the image defined by <code>url</code>. The format is <code>\"xpos ypos\"</code>\n *  (the same format as for the CSS <code>background-position</code> property). You must set\n *  this property appropriately when the image defined by <code>url</code> represents a sprite\n *  containing multiple images. Note that the position <i>must</i> be specified in px units.\n */\n/**\n * @name ClusterIconInfo\n * @class This class is an object containing general information about a cluster icon. This is\n *  the object that a <code>calculator</code> function returns.\n *\n * @property {string} text The text of the label to be shown on the cluster icon.\n * @property {number} index The index plus 1 of the element in the <code>styles</code>\n *  array to be used to style the cluster icon.\n * @property {string} title The tooltip to display when the mouse moves over the cluster icon.\n *  If this value is <code>undefined</code> or <code>\"\"</code>, <code>title</code> is set to the\n *  value of the <code>title</code> property passed to the MarkerClusterer.\n */\n/**\n * A cluster icon.\n *\n * @constructor\n * @extends google.maps.OverlayView\n * @param {Cluster} cluster The cluster with which the icon is to be associated.\n * @param {Array} [styles] An array of {@link ClusterIconStyle} defining the cluster icons\n *  to use for various cluster sizes.\n * @private\n */\nfunction ClusterIcon(cluster, styles) {\n  cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n\n  this.cluster_ = cluster;\n  this.className_ = cluster.getMarkerClusterer().getClusterClass();\n  this.styles_ = styles;\n  this.center_ = null;\n  this.div_ = null;\n  this.sums_ = null;\n  this.visible_ = false;\n\n  this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n}\n\n\n/**\n * Adds the icon to the DOM.\n */\nClusterIcon.prototype.onAdd = function () {\n  var cClusterIcon = this;\n  var cMouseDownInCluster;\n  var cDraggingMapByCluster;\n\n  this.div_ = document.createElement(\"div\");\n  this.div_.className = this.className_;\n  if (this.visible_) {\n    this.show();\n  }\n\n  this.getPanes().overlayMouseTarget.appendChild(this.div_);\n\n  // Fix for Issue 157\n  this.boundsChangedListener_ = google.maps.event.addListener(this.getMap(), \"bounds_changed\", function () {\n    cDraggingMapByCluster = cMouseDownInCluster;\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mousedown\", function () {\n    cMouseDownInCluster = true;\n    cDraggingMapByCluster = false;\n  });\n\n  google.maps.event.addDomListener(this.div_, \"click\", function (e) {\n    cMouseDownInCluster = false;\n    if (!cDraggingMapByCluster) {\n      var theBounds;\n      var mz;\n      var mc = cClusterIcon.cluster_.getMarkerClusterer();\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n      google.maps.event.trigger(mc, \"click\", cClusterIcon.cluster_);\n      google.maps.event.trigger(mc, \"clusterclick\", cClusterIcon.cluster_); // deprecated name\n\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n      if (mc.getZoomOnClick()) {\n        // Zoom into the cluster.\n        mz = mc.getMaxZoom();\n        theBounds = cClusterIcon.cluster_.getBounds();\n        mc.getMap().fitBounds(theBounds);\n        // There is a fix for Issue 170 here:\n        setTimeout(function () {\n          mc.getMap().fitBounds(theBounds);\n          // Don't zoom beyond the max zoom level\n          if (mz !== null && (mc.getMap().getZoom() > mz)) {\n            mc.getMap().setZoom(mz + 1);\n          }\n        }, 100);\n      }\n\n      // Prevent event propagation to the map:\n      e.cancelBubble = true;\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mouseover\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n    google.maps.event.trigger(mc, \"mouseover\", cClusterIcon.cluster_);\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mouseout\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n    google.maps.event.trigger(mc, \"mouseout\", cClusterIcon.cluster_);\n  });\n};\n\n\n/**\n * Removes the icon from the DOM.\n */\nClusterIcon.prototype.onRemove = function () {\n  if (this.div_ && this.div_.parentNode) {\n    this.hide();\n    google.maps.event.removeListener(this.boundsChangedListener_);\n    google.maps.event.clearInstanceListeners(this.div_);\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n\n\n/**\n * Draws the icon.\n */\nClusterIcon.prototype.draw = function () {\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.top = pos.y + \"px\";\n    this.div_.style.left = pos.x + \"px\";\n  }\n};\n\n\n/**\n * Hides the icon.\n */\nClusterIcon.prototype.hide = function () {\n  if (this.div_) {\n    this.div_.style.display = \"none\";\n  }\n  this.visible_ = false;\n};\n\n\n/**\n * Positions and shows the icon.\n */\nClusterIcon.prototype.show = function () {\n  if (this.div_) {\n    var img = \"\";\n    // NOTE: values must be specified in px units\n    var bp = this.backgroundPosition_.split(\" \");\n    var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    img = \"<img src='\" + this.url_ + \"' style='position: absolute; top: \" + spriteV + \"px; left: \" + spriteH + \"px; \";\n    if (!this.cluster_.getMarkerClusterer().enableRetinaIcons_) {\n      img += \"clip: rect(\" + (-1 * spriteV) + \"px, \" + ((-1 * spriteH) + this.width_) + \"px, \" +\n          ((-1 * spriteV) + this.height_) + \"px, \" + (-1 * spriteH) + \"px);\";\n    }\n    img += \"'>\";\n    this.div_.innerHTML = img + \"<div style='\" +\n        \"position: absolute;\" +\n        \"top: \" + this.anchorText_[0] + \"px;\" +\n        \"left: \" + this.anchorText_[1] + \"px;\" +\n        \"color: \" + this.textColor_ + \";\" +\n        \"font-size: \" + this.textSize_ + \"px;\" +\n        \"font-family: \" + this.fontFamily_ + \";\" +\n        \"font-weight: \" + this.fontWeight_ + \";\" +\n        \"font-style: \" + this.fontStyle_ + \";\" +\n        \"text-decoration: \" + this.textDecoration_ + \";\" +\n        \"text-align: center;\" +\n        \"width: \" + this.width_ + \"px;\" +\n        \"line-height:\" + this.height_ + \"px;\" +\n        \"'>\" + this.sums_.text + \"</div>\";\n    if (typeof this.sums_.title === \"undefined\" || this.sums_.title === \"\") {\n      this.div_.title = this.cluster_.getMarkerClusterer().getTitle();\n    } else {\n      this.div_.title = this.sums_.title;\n    }\n    this.div_.style.display = \"\";\n  }\n  this.visible_ = true;\n};\n\n\n/**\n * Sets the icon styles to the appropriate element in the styles array.\n *\n * @param {ClusterIconInfo} sums The icon label text and styles index.\n */\nClusterIcon.prototype.useStyle = function (sums) {\n  this.sums_ = sums;\n  var index = Math.max(0, sums.index - 1);\n  index = Math.min(this.styles_.length - 1, index);\n  var style = this.styles_[index];\n  this.url_ = style.url;\n  this.height_ = style.height;\n  this.width_ = style.width;\n  this.anchorText_ = style.anchorText || [0, 0];\n  this.anchorIcon_ = style.anchorIcon || [parseInt(this.height_ / 2, 10), parseInt(this.width_ / 2, 10)];\n  this.textColor_ = style.textColor || \"black\";\n  this.textSize_ = style.textSize || 11;\n  this.textDecoration_ = style.textDecoration || \"none\";\n  this.fontWeight_ = style.fontWeight || \"bold\";\n  this.fontStyle_ = style.fontStyle || \"normal\";\n  this.fontFamily_ = style.fontFamily || \"Arial,sans-serif\";\n  this.backgroundPosition_ = style.backgroundPosition || \"0 0\";\n};\n\n\n/**\n * Sets the position at which to center the icon.\n *\n * @param {google.maps.LatLng} center The latlng to set as the center.\n */\nClusterIcon.prototype.setCenter = function (center) {\n  this.center_ = center;\n};\n\n\n/**\n * Creates the cssText style parameter based on the position of the icon.\n *\n * @param {google.maps.Point} pos The position of the icon.\n * @return {string} The CSS style text.\n */\nClusterIcon.prototype.createCss = function (pos) {\n  var style = [];\n  style.push(\"cursor: pointer;\");\n  style.push(\"position: absolute; top: \" + pos.y + \"px; left: \" + pos.x + \"px;\");\n  style.push(\"width: \" + this.width_ + \"px; height: \" + this.height_ + \"px;\");\n  return style.join(\"\");\n};\n\n\n/**\n * Returns the position at which to place the DIV depending on the latlng.\n *\n * @param {google.maps.LatLng} latlng The position in latlng.\n * @return {google.maps.Point} The position in pixels.\n */\nClusterIcon.prototype.getPosFromLatLng_ = function (latlng) {\n  var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n  pos.x -= this.anchorIcon_[1];\n  pos.y -= this.anchorIcon_[0];\n  pos.x = parseInt(pos.x, 10);\n  pos.y = parseInt(pos.y, 10);\n  return pos;\n};\n\n\n/**\n * Creates a single cluster that manages a group of proximate markers.\n *  Used internally, do not call this constructor directly.\n * @constructor\n * @param {MarkerClusterer} mc The <code>MarkerClusterer</code> object with which this\n *  cluster is associated.\n */\nfunction Cluster(mc) {\n  this.markerClusterer_ = mc;\n  this.map_ = mc.getMap();\n  this.gridSize_ = mc.getGridSize();\n  this.minClusterSize_ = mc.getMinimumClusterSize();\n  this.averageCenter_ = mc.getAverageCenter();\n  this.markers_ = [];\n  this.center_ = null;\n  this.bounds_ = null;\n  this.clusterIcon_ = new ClusterIcon(this, mc.getStyles());\n}\n\n\n/**\n * Returns the number of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {number} The number of markers in the cluster.\n */\nCluster.prototype.getSize = function () {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the array of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {Array} The array of markers in the cluster.\n */\nCluster.prototype.getMarkers = function () {\n  return this.markers_;\n};\n\n\n/**\n * Returns the center of the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {google.maps.LatLng} The center of the cluster.\n */\nCluster.prototype.getCenter = function () {\n  return this.center_;\n};\n\n\n/**\n * Returns the map with which the cluster is associated.\n *\n * @return {google.maps.Map} The map.\n * @ignore\n */\nCluster.prototype.getMap = function () {\n  return this.map_;\n};\n\n\n/**\n * Returns the <code>MarkerClusterer</code> object with which the cluster is associated.\n *\n * @return {MarkerClusterer} The associated marker clusterer.\n * @ignore\n */\nCluster.prototype.getMarkerClusterer = function () {\n  return this.markerClusterer_;\n};\n\n\n/**\n * Returns the bounds of the cluster.\n *\n * @return {google.maps.LatLngBounds} the cluster bounds.\n * @ignore\n */\nCluster.prototype.getBounds = function () {\n  var i;\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  var markers = this.getMarkers();\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n  return bounds;\n};\n\n\n/**\n * Removes the cluster from the map.\n *\n * @ignore\n */\nCluster.prototype.remove = function () {\n  this.clusterIcon_.setMap(null);\n  this.markers_ = [];\n  delete this.markers_;\n};\n\n\n/**\n * Adds a marker to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to be added.\n * @return {boolean} True if the marker was added.\n * @ignore\n */\nCluster.prototype.addMarker = function (marker) {\n  var i;\n  var mCount;\n  var mz;\n\n  if (this.isMarkerAlreadyAdded_(marker)) {\n    return false;\n  }\n\n  if (!this.center_) {\n    this.center_ = marker.getPosition();\n    this.calculateBounds_();\n  } else {\n    if (this.averageCenter_) {\n      var l = this.markers_.length + 1;\n      var lat = (this.center_.lat() * (l - 1) + marker.getPosition().lat()) / l;\n      var lng = (this.center_.lng() * (l - 1) + marker.getPosition().lng()) / l;\n      this.center_ = new google.maps.LatLng(lat, lng);\n      this.calculateBounds_();\n    }\n  }\n\n  marker.isAdded = true;\n  this.markers_.push(marker);\n\n  mCount = this.markers_.length;\n  mz = this.markerClusterer_.getMaxZoom();\n  if (mz !== null && this.map_.getZoom() > mz) {\n    // Zoomed in past max zoom, so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount < this.minClusterSize_) {\n    // Min cluster size not reached so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount === this.minClusterSize_) {\n    // Hide the markers that were showing.\n    for (i = 0; i < mCount; i++) {\n      this.markers_[i].setMap(null);\n    }\n  } else {\n    marker.setMap(null);\n  }\n\n  this.updateIcon_();\n  return true;\n};\n\n\n/**\n * Determines if a marker lies within the cluster's bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker lies in the bounds.\n * @ignore\n */\nCluster.prototype.isMarkerInClusterBounds = function (marker) {\n  return this.bounds_.contains(marker.getPosition());\n};\n\n\n/**\n * Calculates the extended bounds of the cluster with the grid.\n */\nCluster.prototype.calculateBounds_ = function () {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n};\n\n\n/**\n * Updates the cluster icon.\n */\nCluster.prototype.updateIcon_ = function () {\n  var mCount = this.markers_.length;\n  var mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz !== null && this.map_.getZoom() > mz) {\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  if (mCount < this.minClusterSize_) {\n    // Min cluster size not yet reached.\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  var numStyles = this.markerClusterer_.getStyles().length;\n  var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n  this.clusterIcon_.setCenter(this.center_);\n  this.clusterIcon_.useStyle(sums);\n  this.clusterIcon_.show();\n};\n\n\n/**\n * Determines if a marker has already been added to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker has already been added.\n */\nCluster.prototype.isMarkerAlreadyAdded_ = function (marker) {\n  var i;\n  if (this.markers_.indexOf) {\n    return this.markers_.indexOf(marker) !== -1;\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @name MarkerClustererOptions\n * @class This class represents the optional parameter passed to\n *  the {@link MarkerClusterer} constructor.\n * @property {number} [gridSize=60] The grid size of a cluster in pixels. The grid is a square.\n * @property {number} [maxZoom=null] The maximum zoom level at which clustering is enabled or\n *  <code>null</code> if clustering is to be enabled at all zoom levels.\n * @property {boolean} [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n *  clicked. You may want to set this to <code>false</code> if you have installed a handler\n *  for the <code>click</code> event and it deals with zooming on its own.\n * @property {boolean} [averageCenter=false] Whether the position of a cluster marker should be\n *  the average position of all markers in the cluster. If set to <code>false</code>, the\n *  cluster marker is positioned at the location of the first marker added to the cluster.\n * @property {number} [minimumClusterSize=2] The minimum number of markers needed in a cluster\n *  before the markers are hidden and a cluster marker appears.\n * @property {boolean} [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n *  may want to set this to <code>true</code> to ensure that hidden markers are not included\n *  in the marker count that appears on a cluster marker (this count is the value of the\n *  <code>text</code> property of the result returned by the default <code>calculator</code>).\n *  If set to <code>true</code> and you change the visibility of a marker being clustered, be\n *  sure to also call <code>MarkerClusterer.repaint()</code>.\n * @property {string} [title=\"\"] The tooltip to display when the mouse moves over a cluster\n *  marker. (Alternatively, you can use a custom <code>calculator</code> function to specify a\n *  different tooltip for each cluster marker.)\n * @property {function} [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n *  the text to be displayed on a cluster marker and the index indicating which style to use\n *  for the cluster marker. The input parameters for the function are (1) the array of markers\n *  represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n *  {@link ClusterIconInfo} object. The default <code>calculator</code> returns a\n *  <code>text</code> property which is the number of markers in the cluster and an\n *  <code>index</code> property which is one higher than the lowest integer such that\n *  <code>10^i</code> exceeds the number of markers in the cluster, or the size of the styles\n *  array, whichever is less. The <code>styles</code> array element used has an index of\n *  <code>index</code> minus 1. For example, the default <code>calculator</code> returns a\n *  <code>text</code> value of <code>\"125\"</code> and an <code>index</code> of <code>3</code>\n *  for a cluster icon representing 125 markers so the element used in the <code>styles</code>\n *  array is <code>2</code>. A <code>calculator</code> may also return a <code>title</code>\n *  property that contains the text of the tooltip to be used for the cluster marker. If\n *   <code>title</code> is not defined, the tooltip is set to the value of the <code>title</code>\n *   property for the MarkerClusterer.\n * @property {string} [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n *  for the cluster markers. Use this class to define CSS styles that are not set up by the code\n *  that processes the <code>styles</code> array.\n * @property {Array} [styles] An array of {@link ClusterIconStyle} elements defining the styles\n *  of the cluster markers to be used. The element to be used to style a given cluster marker\n *  is determined by the function defined by the <code>calculator</code> property.\n *  The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n *  from the values for <code>imagePath</code>, <code>imageExtension</code>, and\n *  <code>imageSizes</code>.\n * @property {boolean} [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n * have sizes that are some multiple (typically double) of their actual display size. Icons such\n * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n * Note: if this property is <code>true</code>, sprites cannot be used as cluster icons.\n * @property {number} [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n *  number of markers to be processed in a single batch when using a browser other than\n *  Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n * @property {number} [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n *  being used, markers are processed in several batches with a small delay inserted between\n *  each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n *  number of markers to be processed in a single batch; select as high a number as you can\n *  without causing a timeout error in the browser. This number might need to be as low as 100\n *  if 15,000 markers are being managed, for example.\n * @property {string} [imagePath=MarkerClusterer.IMAGE_PATH]\n *  The full URL of the root name of the group of image files to use for cluster icons.\n *  The complete file name is of the form <code>imagePath</code>n.<code>imageExtension</code>\n *  where n is the image file number (1, 2, etc.).\n * @property {string} [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n *  The extension name for the cluster icon image files (e.g., <code>\"png\"</code> or\n *  <code>\"jpg\"</code>).\n * @property {Array} [imageSizes=MarkerClusterer.IMAGE_SIZES]\n *  An array of numbers containing the widths of the group of\n *  <code>imagePath</code>n.<code>imageExtension</code> image files.\n *  (The images are assumed to be square.)\n */\n/**\n * Creates a MarkerClusterer object with the options specified in {@link MarkerClustererOptions}.\n * @constructor\n * @extends google.maps.OverlayView\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>} [opt_markers] The markers to be added to the cluster.\n * @param {MarkerClustererOptions} [opt_options] The optional parameters.\n */\nfunction MarkerClusterer(map, opt_markers, opt_options) {\n  // MarkerClusterer implements google.maps.OverlayView interface. We use the\n  // extend function to extend MarkerClusterer with google.maps.OverlayView\n  // because it might not always be available when the code is defined so we\n  // look for it at the last possible moment. If it doesn't exist now then\n  // there is no point going ahead :)\n  this.extend(MarkerClusterer, google.maps.OverlayView);\n\n  opt_markers = opt_markers || [];\n  opt_options = opt_options || {};\n\n  this.markers_ = [];\n  this.clusters_ = [];\n  this.listeners_ = [];\n  this.activeMap_ = null;\n  this.ready_ = false;\n\n  this.gridSize_ = opt_options.gridSize || 60;\n  this.minClusterSize_ = opt_options.minimumClusterSize || 2;\n  this.maxZoom_ = opt_options.maxZoom || null;\n  this.styles_ = opt_options.styles || [];\n  this.title_ = opt_options.title || \"\";\n  this.zoomOnClick_ = true;\n  if (opt_options.zoomOnClick !== undefined) {\n    this.zoomOnClick_ = opt_options.zoomOnClick;\n  }\n  this.averageCenter_ = false;\n  if (opt_options.averageCenter !== undefined) {\n    this.averageCenter_ = opt_options.averageCenter;\n  }\n  this.ignoreHidden_ = false;\n  if (opt_options.ignoreHidden !== undefined) {\n    this.ignoreHidden_ = opt_options.ignoreHidden;\n  }\n  this.enableRetinaIcons_ = false;\n  if (opt_options.enableRetinaIcons !== undefined) {\n    this.enableRetinaIcons_ = opt_options.enableRetinaIcons;\n  }\n  this.imagePath_ = opt_options.imagePath || MarkerClusterer.IMAGE_PATH;\n  this.imageExtension_ = opt_options.imageExtension || MarkerClusterer.IMAGE_EXTENSION;\n  this.imageSizes_ = opt_options.imageSizes || MarkerClusterer.IMAGE_SIZES;\n  this.calculator_ = opt_options.calculator || MarkerClusterer.CALCULATOR;\n  this.batchSize_ = opt_options.batchSize || MarkerClusterer.BATCH_SIZE;\n  this.batchSizeIE_ = opt_options.batchSizeIE || MarkerClusterer.BATCH_SIZE_IE;\n  this.clusterClass_ = opt_options.clusterClass || \"cluster\";\n\n  if (navigator.userAgent.toLowerCase().indexOf(\"msie\") !== -1) {\n    // Try to avoid IE timeout when processing a huge number of markers:\n    this.batchSize_ = this.batchSizeIE_;\n  }\n\n  this.setupStyles_();\n\n  this.addMarkers(opt_markers, true);\n  this.setMap(map); // Note: this causes onAdd to be called\n}\n\n\n/**\n * Implementation of the onAdd interface method.\n * @ignore\n */\nMarkerClusterer.prototype.onAdd = function () {\n  var cMarkerClusterer = this;\n\n  this.activeMap_ = this.getMap();\n  this.ready_ = true;\n\n  this.repaint();\n\n  // Add the map event listeners\n  this.listeners_ = [\n    google.maps.event.addListener(this.getMap(), \"zoom_changed\", function () {\n      cMarkerClusterer.resetViewport_(false);\n      // Workaround for this Google bug: when map is at level 0 and \"-\" of\n      // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n      // the map doesn't zoom out any further. In this situation, no \"idle\"\n      // event is triggered so the cluster markers that have been removed\n      // do not get redrawn. Same goes for a zoom in at maxZoom.\n      if (this.getZoom() === (this.get(\"minZoom\") || 0) || this.getZoom() === this.get(\"maxZoom\")) {\n        google.maps.event.trigger(this, \"idle\");\n      }\n    }),\n    google.maps.event.addListener(this.getMap(), \"idle\", function () {\n      cMarkerClusterer.redraw_();\n    })\n  ];\n};\n\n\n/**\n * Implementation of the onRemove interface method.\n * Removes map event listeners and all cluster icons from the DOM.\n * All managed markers are also put back on the map.\n * @ignore\n */\nMarkerClusterer.prototype.onRemove = function () {\n  var i;\n\n  // Put all the managed markers back on the map:\n  for (i = 0; i < this.markers_.length; i++) {\n    if (this.markers_[i].getMap() !== this.activeMap_) {\n      this.markers_[i].setMap(this.activeMap_);\n    }\n  }\n\n  // Remove all clusters:\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n  this.clusters_ = [];\n\n  // Remove map event listeners:\n  for (i = 0; i < this.listeners_.length; i++) {\n    google.maps.event.removeListener(this.listeners_[i]);\n  }\n  this.listeners_ = [];\n\n  this.activeMap_ = null;\n  this.ready_ = false;\n};\n\n\n/**\n * Implementation of the draw interface method.\n * @ignore\n */\nMarkerClusterer.prototype.draw = function () {};\n\n\n/**\n * Sets up the styles object.\n */\nMarkerClusterer.prototype.setupStyles_ = function () {\n  var i, size;\n  if (this.styles_.length > 0) {\n    return;\n  }\n\n  for (i = 0; i < this.imageSizes_.length; i++) {\n    size = this.imageSizes_[i];\n    this.styles_.push({\n      url: this.imagePath_ + (i + 1) + \".\" + this.imageExtension_,\n      height: size,\n      width: size\n    });\n  }\n};\n\n\n/**\n *  Fits the map to the bounds of the markers managed by the clusterer.\n */\nMarkerClusterer.prototype.fitMapToMarkers = function () {\n  var i;\n  var markers = this.getMarkers();\n  var bounds = new google.maps.LatLngBounds();\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n\n  this.getMap().fitBounds(bounds);\n};\n\n\n/**\n * Returns the value of the <code>gridSize</code> property.\n *\n * @return {number} The grid size.\n */\nMarkerClusterer.prototype.getGridSize = function () {\n  return this.gridSize_;\n};\n\n\n/**\n * Sets the value of the <code>gridSize</code> property.\n *\n * @param {number} gridSize The grid size.\n */\nMarkerClusterer.prototype.setGridSize = function (gridSize) {\n  this.gridSize_ = gridSize;\n};\n\n\n/**\n * Returns the value of the <code>minimumClusterSize</code> property.\n *\n * @return {number} The minimum cluster size.\n */\nMarkerClusterer.prototype.getMinimumClusterSize = function () {\n  return this.minClusterSize_;\n};\n\n/**\n * Sets the value of the <code>minimumClusterSize</code> property.\n *\n * @param {number} minimumClusterSize The minimum cluster size.\n */\nMarkerClusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n  this.minClusterSize_ = minimumClusterSize;\n};\n\n\n/**\n *  Returns the value of the <code>maxZoom</code> property.\n *\n *  @return {number} The maximum zoom level.\n */\nMarkerClusterer.prototype.getMaxZoom = function () {\n  return this.maxZoom_;\n};\n\n\n/**\n *  Sets the value of the <code>maxZoom</code> property.\n *\n *  @param {number} maxZoom The maximum zoom level.\n */\nMarkerClusterer.prototype.setMaxZoom = function (maxZoom) {\n  this.maxZoom_ = maxZoom;\n};\n\n\n/**\n *  Returns the value of the <code>styles</code> property.\n *\n *  @return {Array} The array of styles defining the cluster markers to be used.\n */\nMarkerClusterer.prototype.getStyles = function () {\n  return this.styles_;\n};\n\n\n/**\n *  Sets the value of the <code>styles</code> property.\n *\n *  @param {Array.<ClusterIconStyle>} styles The array of styles to use.\n */\nMarkerClusterer.prototype.setStyles = function (styles) {\n  this.styles_ = styles;\n};\n\n\n/**\n * Returns the value of the <code>title</code> property.\n *\n * @return {string} The content of the title text.\n */\nMarkerClusterer.prototype.getTitle = function () {\n  return this.title_;\n};\n\n\n/**\n *  Sets the value of the <code>title</code> property.\n *\n *  @param {string} title The value of the title property.\n */\nMarkerClusterer.prototype.setTitle = function (title) {\n  this.title_ = title;\n};\n\n\n/**\n * Returns the value of the <code>zoomOnClick</code> property.\n *\n * @return {boolean} True if zoomOnClick property is set.\n */\nMarkerClusterer.prototype.getZoomOnClick = function () {\n  return this.zoomOnClick_;\n};\n\n\n/**\n *  Sets the value of the <code>zoomOnClick</code> property.\n *\n *  @param {boolean} zoomOnClick The value of the zoomOnClick property.\n */\nMarkerClusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n  this.zoomOnClick_ = zoomOnClick;\n};\n\n\n/**\n * Returns the value of the <code>averageCenter</code> property.\n *\n * @return {boolean} True if averageCenter property is set.\n */\nMarkerClusterer.prototype.getAverageCenter = function () {\n  return this.averageCenter_;\n};\n\n\n/**\n *  Sets the value of the <code>averageCenter</code> property.\n *\n *  @param {boolean} averageCenter The value of the averageCenter property.\n */\nMarkerClusterer.prototype.setAverageCenter = function (averageCenter) {\n  this.averageCenter_ = averageCenter;\n};\n\n\n/**\n * Returns the value of the <code>ignoreHidden</code> property.\n *\n * @return {boolean} True if ignoreHidden property is set.\n */\nMarkerClusterer.prototype.getIgnoreHidden = function () {\n  return this.ignoreHidden_;\n};\n\n\n/**\n *  Sets the value of the <code>ignoreHidden</code> property.\n *\n *  @param {boolean} ignoreHidden The value of the ignoreHidden property.\n */\nMarkerClusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n  this.ignoreHidden_ = ignoreHidden;\n};\n\n\n/**\n * Returns the value of the <code>enableRetinaIcons</code> property.\n *\n * @return {boolean} True if enableRetinaIcons property is set.\n */\nMarkerClusterer.prototype.getEnableRetinaIcons = function () {\n  return this.enableRetinaIcons_;\n};\n\n\n/**\n *  Sets the value of the <code>enableRetinaIcons</code> property.\n *\n *  @param {boolean} enableRetinaIcons The value of the enableRetinaIcons property.\n */\nMarkerClusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n  this.enableRetinaIcons_ = enableRetinaIcons;\n};\n\n\n/**\n * Returns the value of the <code>imageExtension</code> property.\n *\n * @return {string} The value of the imageExtension property.\n */\nMarkerClusterer.prototype.getImageExtension = function () {\n  return this.imageExtension_;\n};\n\n\n/**\n *  Sets the value of the <code>imageExtension</code> property.\n *\n *  @param {string} imageExtension The value of the imageExtension property.\n */\nMarkerClusterer.prototype.setImageExtension = function (imageExtension) {\n  this.imageExtension_ = imageExtension;\n};\n\n\n/**\n * Returns the value of the <code>imagePath</code> property.\n *\n * @return {string} The value of the imagePath property.\n */\nMarkerClusterer.prototype.getImagePath = function () {\n  return this.imagePath_;\n};\n\n\n/**\n *  Sets the value of the <code>imagePath</code> property.\n *\n *  @param {string} imagePath The value of the imagePath property.\n */\nMarkerClusterer.prototype.setImagePath = function (imagePath) {\n  this.imagePath_ = imagePath;\n};\n\n\n/**\n * Returns the value of the <code>imageSizes</code> property.\n *\n * @return {Array} The value of the imageSizes property.\n */\nMarkerClusterer.prototype.getImageSizes = function () {\n  return this.imageSizes_;\n};\n\n\n/**\n *  Sets the value of the <code>imageSizes</code> property.\n *\n *  @param {Array} imageSizes The value of the imageSizes property.\n */\nMarkerClusterer.prototype.setImageSizes = function (imageSizes) {\n  this.imageSizes_ = imageSizes;\n};\n\n\n/**\n * Returns the value of the <code>calculator</code> property.\n *\n * @return {function} the value of the calculator property.\n */\nMarkerClusterer.prototype.getCalculator = function () {\n  return this.calculator_;\n};\n\n\n/**\n * Sets the value of the <code>calculator</code> property.\n *\n * @param {function(Array.<google.maps.Marker>, number)} calculator The value\n *  of the calculator property.\n */\nMarkerClusterer.prototype.setCalculator = function (calculator) {\n  this.calculator_ = calculator;\n};\n\n\n/**\n * Returns the value of the <code>batchSizeIE</code> property.\n *\n * @return {number} the value of the batchSizeIE property.\n */\nMarkerClusterer.prototype.getBatchSizeIE = function () {\n  return this.batchSizeIE_;\n};\n\n\n/**\n * Sets the value of the <code>batchSizeIE</code> property.\n *\n *  @param {number} batchSizeIE The value of the batchSizeIE property.\n */\nMarkerClusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n  this.batchSizeIE_ = batchSizeIE;\n};\n\n\n/**\n * Returns the value of the <code>clusterClass</code> property.\n *\n * @return {string} the value of the clusterClass property.\n */\nMarkerClusterer.prototype.getClusterClass = function () {\n  return this.clusterClass_;\n};\n\n\n/**\n * Sets the value of the <code>clusterClass</code> property.\n *\n *  @param {string} clusterClass The value of the clusterClass property.\n */\nMarkerClusterer.prototype.setClusterClass = function (clusterClass) {\n  this.clusterClass_ = clusterClass;\n};\n\n\n/**\n *  Returns the array of markers managed by the clusterer.\n *\n *  @return {Array} The array of markers managed by the clusterer.\n */\nMarkerClusterer.prototype.getMarkers = function () {\n  return this.markers_;\n};\n\n\n/**\n *  Returns the number of markers managed by the clusterer.\n *\n *  @return {number} The number of markers.\n */\nMarkerClusterer.prototype.getTotalMarkers = function () {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the current array of clusters formed by the clusterer.\n *\n * @return {Array} The array of clusters formed by the clusterer.\n */\nMarkerClusterer.prototype.getClusters = function () {\n  return this.clusters_;\n};\n\n\n/**\n * Returns the number of clusters formed by the clusterer.\n *\n * @return {number} The number of clusters formed by the clusterer.\n */\nMarkerClusterer.prototype.getTotalClusters = function () {\n  return this.clusters_.length;\n};\n\n\n/**\n * Adds a marker to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\nMarkerClusterer.prototype.addMarker = function (marker, opt_nodraw) {\n  this.pushMarkerTo_(marker);\n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n\n\n/**\n * Adds an array of markers to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\nMarkerClusterer.prototype.addMarkers = function (markers, opt_nodraw) {\n  var key;\n  for (key in markers) {\n    if (markers.hasOwnProperty(key)) {\n      this.pushMarkerTo_(markers[key]);\n    }\n  }  \n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n\n\n/**\n * Pushes a marker to the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\nMarkerClusterer.prototype.pushMarkerTo_ = function (marker) {\n  // If the marker is draggable add a listener so we can update the clusters on the dragend:\n  if (marker.getDraggable()) {\n    var cMarkerClusterer = this;\n    google.maps.event.addListener(marker, \"dragend\", function () {\n      if (cMarkerClusterer.ready_) {\n        this.isAdded = false;\n        cMarkerClusterer.repaint();\n      }\n    });\n  }\n  marker.isAdded = false;\n  this.markers_.push(marker);\n};\n\n\n/**\n * Removes a marker from the cluster.  The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if the\n *  marker was removed from the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if the marker was removed from the clusterer.\n */\nMarkerClusterer.prototype.removeMarker = function (marker, opt_nodraw) {\n  var removed = this.removeMarker_(marker);\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n\n\n/**\n * Removes an array of markers from the cluster. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if markers\n *  were removed from the clusterer.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if markers were removed from the clusterer.\n */\nMarkerClusterer.prototype.removeMarkers = function (markers, opt_nodraw) {\n  var i, r;\n  var removed = false;\n\n  for (i = 0; i < markers.length; i++) {\n    r = this.removeMarker_(markers[i]);\n    removed = removed || r;\n  }\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n\n\n/**\n * Removes a marker and returns true if removed, false if not.\n *\n * @param {google.maps.Marker} marker The marker to remove\n * @return {boolean} Whether the marker was removed or not\n */\nMarkerClusterer.prototype.removeMarker_ = function (marker) {\n  var i;\n  var index = -1;\n  if (this.markers_.indexOf) {\n    index = this.markers_.indexOf(marker);\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index === -1) {\n    // Marker is not in our list of markers, so do nothing:\n    return false;\n  }\n\n  marker.setMap(null);\n  this.markers_.splice(index, 1); // Remove the marker from the list of managed markers\n  return true;\n};\n\n\n/**\n * Removes all clusters and markers from the map and also removes all markers\n *  managed by the clusterer.\n */\nMarkerClusterer.prototype.clearMarkers = function () {\n  this.resetViewport_(true);\n  this.markers_ = [];\n};\n\n\n/**\n * Recalculates and redraws all the marker clusters from scratch.\n *  Call this after changing any properties.\n */\nMarkerClusterer.prototype.repaint = function () {\n  var oldClusters = this.clusters_.slice();\n  this.clusters_ = [];\n  this.resetViewport_(false);\n  this.redraw_();\n\n  // Remove the old clusters.\n  // Do it in a timeout to prevent blinking effect.\n  setTimeout(function () {\n    var i;\n    for (i = 0; i < oldClusters.length; i++) {\n      oldClusters[i].remove();\n    }\n  }, 0);\n};\n\n\n/**\n * Returns the current bounds extended by the grid size.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n * @return {google.maps.LatLngBounds} The extended bounds.\n * @ignore\n */\nMarkerClusterer.prototype.getExtendedBounds = function (bounds) {\n  var projection = this.getProjection();\n\n  // Turn the bounds into latlng.\n  var tr = new google.maps.LatLng(bounds.getNorthEast().lat(),\n      bounds.getNorthEast().lng());\n  var bl = new google.maps.LatLng(bounds.getSouthWest().lat(),\n      bounds.getSouthWest().lng());\n\n  // Convert the points to pixels and the extend out by the grid size.\n  var trPix = projection.fromLatLngToDivPixel(tr);\n  trPix.x += this.gridSize_;\n  trPix.y -= this.gridSize_;\n\n  var blPix = projection.fromLatLngToDivPixel(bl);\n  blPix.x -= this.gridSize_;\n  blPix.y += this.gridSize_;\n\n  // Convert the pixel points back to LatLng\n  var ne = projection.fromDivPixelToLatLng(trPix);\n  var sw = projection.fromDivPixelToLatLng(blPix);\n\n  // Extend the bounds to contain the new bounds.\n  bounds.extend(ne);\n  bounds.extend(sw);\n\n  return bounds;\n};\n\n\n/**\n * Redraws all the clusters.\n */\nMarkerClusterer.prototype.redraw_ = function () {\n  this.createClusters_(0);\n};\n\n\n/**\n * Removes all clusters from the map. The markers are also removed from the map\n *  if <code>opt_hide</code> is set to <code>true</code>.\n *\n * @param {boolean} [opt_hide] Set to <code>true</code> to also remove the markers\n *  from the map.\n */\nMarkerClusterer.prototype.resetViewport_ = function (opt_hide) {\n  var i, marker;\n  // Remove all the clusters\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n  this.clusters_ = [];\n\n  // Reset the markers to not be added and to be removed from the map.\n  for (i = 0; i < this.markers_.length; i++) {\n    marker = this.markers_[i];\n    marker.isAdded = false;\n    if (opt_hide) {\n      marker.setMap(null);\n    }\n  }\n};\n\n\n/**\n * Calculates the distance between two latlng locations in km.\n *\n * @param {google.maps.LatLng} p1 The first lat lng point.\n * @param {google.maps.LatLng} p2 The second lat lng point.\n * @return {number} The distance between the two points in km.\n * @see http://www.movable-type.co.uk/scripts/latlong.html\n*/\nMarkerClusterer.prototype.distanceBetweenPoints_ = function (p1, p2) {\n  var R = 6371; // Radius of the Earth in km\n  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n};\n\n\n/**\n * Determines if a marker is contained in a bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n * @return {boolean} True if the marker is in the bounds.\n */\nMarkerClusterer.prototype.isMarkerInBounds_ = function (marker, bounds) {\n  return bounds.contains(marker.getPosition());\n};\n\n\n/**\n * Adds a marker to a cluster, or creates a new cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\nMarkerClusterer.prototype.addToClosestCluster_ = function (marker) {\n  var i, d, cluster, center;\n  var distance = 40000; // Some large number\n  var clusterToAddTo = null;\n  for (i = 0; i < this.clusters_.length; i++) {\n    cluster = this.clusters_[i];\n    center = cluster.getCenter();\n    if (center) {\n      d = this.distanceBetweenPoints_(center, marker.getPosition());\n      if (d < distance) {\n        distance = d;\n        clusterToAddTo = cluster;\n      }\n    }\n  }\n\n  if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n    clusterToAddTo.addMarker(marker);\n  } else {\n    cluster = new Cluster(this);\n    cluster.addMarker(marker);\n    this.clusters_.push(cluster);\n  }\n};\n\n\n/**\n * Creates the clusters. This is done in batches to avoid timeout errors\n *  in some browsers when there is a huge number of markers.\n *\n * @param {number} iFirst The index of the first marker in the batch of\n *  markers to be added to clusters.\n */\nMarkerClusterer.prototype.createClusters_ = function (iFirst) {\n  var i, marker;\n  var mapBounds;\n  var cMarkerClusterer = this;\n  if (!this.ready_) {\n    return;\n  }\n\n  // Cancel previous batch processing if we're working on the first batch:\n  if (iFirst === 0) {\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> begins\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringbegin\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringbegin\", this);\n\n    if (typeof this.timerRefStatic !== \"undefined\") {\n      clearTimeout(this.timerRefStatic);\n      delete this.timerRefStatic;\n    }\n  }\n\n  // Get our current map view bounds.\n  // Create a new bounds object so we don't affect the map.\n  //\n  // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n  if (this.getMap().getZoom() > 3) {\n    mapBounds = new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),\n      this.getMap().getBounds().getNorthEast());\n  } else {\n    mapBounds = new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n  }\n  var bounds = this.getExtendedBounds(mapBounds);\n\n  var iLast = Math.min(iFirst + this.batchSize_, this.markers_.length);\n\n  for (i = iFirst; i < iLast; i++) {\n    marker = this.markers_[i];\n    if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n      if (!this.ignoreHidden_ || (this.ignoreHidden_ && marker.getVisible())) {\n        this.addToClosestCluster_(marker);\n      }\n    }\n  }\n\n  if (iLast < this.markers_.length) {\n    this.timerRefStatic = setTimeout(function () {\n      cMarkerClusterer.createClusters_(iLast);\n    }, 0);\n  } else {\n    delete this.timerRefStatic;\n\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> stops\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringend\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringend\", this);\n  }\n};\n\n\n/**\n * Extends an object's prototype by another's.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\nMarkerClusterer.prototype.extend = function (obj1, obj2) {\n  return (function (object) {\n    var property;\n    for (property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n    return this;\n  }).apply(obj1, [obj2]);\n};\n\n\n/**\n * The default function for determining the label text and style\n * for a cluster icon.\n *\n * @param {Array.<google.maps.Marker>} markers The array of markers represented by the cluster.\n * @param {number} numStyles The number of marker styles available.\n * @return {ClusterIconInfo} The information resource for the cluster.\n * @constant\n * @ignore\n */\nMarkerClusterer.CALCULATOR = function (markers, numStyles) {\n  var index = 0;\n  var title = \"\";\n  var count = markers.length.toString();\n\n  var dv = count;\n  while (dv !== 0) {\n    dv = parseInt(dv / 10, 10);\n    index++;\n  }\n\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index,\n    title: title\n  };\n};\n\n\n/**\n * The number of markers to process in one batch.\n *\n * @type {number}\n * @constant\n */\nMarkerClusterer.BATCH_SIZE = 2000;\n\n\n/**\n * The number of markers to process in one batch (IE only).\n *\n * @type {number}\n * @constant\n */\nMarkerClusterer.BATCH_SIZE_IE = 500;\n\n\n/**\n * The default root name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\nMarkerClusterer.IMAGE_PATH = \"https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/markerclustererplus/images/m\";\n\n\n/**\n * The default extension name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\nMarkerClusterer.IMAGE_EXTENSION = \"png\";\n\n\n/**\n * The default array of sizes for the marker cluster images.\n *\n * @type {Array.<number>}\n * @constant\n */\nMarkerClusterer.IMAGE_SIZES = [53, 56, 66, 78, 90];\n\nmodule.exports = MarkerClusterer\n"],"sourceRoot":""}